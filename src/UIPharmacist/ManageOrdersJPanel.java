/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIPharmacist;


import DeliveryMan.DeliveryMan;
import EcoSystem.EcoSystem;
import Medicine.Medicine;
import javax.swing.JPanel;
import Order.Order;
import Order.Order.OrderStatus;
import Personnel.Person;
import Personnel.Role;
import Enterprise.PharmacyEnterprise;
import Prescription.Prescription;
import Prescription.PrescriptionDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sravya
 */
public class ManageOrdersJPanel extends javax.swing.JPanel {
    private JPanel workArea;
    private EcoSystem ecoSystem;
    private PharmacyEnterprise pharmacy;
    
    public ManageOrdersJPanel(
            JPanel workArea,
            EcoSystem ecoSystem,
            PharmacyEnterprise pharmacy) {
        
        initComponents();
        this.setSize(1100, 850);
        this.workArea = workArea;
        this.ecoSystem = ecoSystem;
        this.pharmacy = pharmacy;
        populateTableOrder();
        populateAcceptedOrdersTable();
        populateCmbDeliveryMan();
    }
 
    
    public void populateTableGeneric(DefaultTableModel dtm, OrderStatus status){
        dtm.setRowCount(0);
        
        for(Order order: ecoSystem.getOrderDirectory().getOrdersByPharmacy(pharmacy)){
            if (!order.getOrderStatus().equals(status)){
                continue;
            }
            Object [] row = new Object[8];
            row[0] = order.getOrderId();
            row[1] = order.getPatient().getPersonDetails().getFullName();
            row[2] = order.getPatient().getPatientDetails().getId();
            row[3] = order.getPatient().getPatientDetails().getAddress();
            row[4] = order.getMedicine().getMedicineId(); //med id
            row[5] = order.getMedicine().getMedicineName(); //med name
            row[6] = order.getQuantity();
            row[7] = order.getOrderStatus();
            dtm.addRow(row);
        }
    }
        
    public void populateTableOrder(){
        DefaultTableModel dtm = (DefaultTableModel) tblOrder.getModel();
        populateTableGeneric(dtm, OrderStatus.INPROCESS);
    }
    
    public void populateAcceptedOrdersTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblAcceptedOrders.getModel();
        populateTableGeneric(dtm, OrderStatus.ACCEPTED);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        btnAcceptOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnCheckMedAvailability = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAcceptedOrders = new javax.swing.JTable();
        lblCurrentAcceptedOrders = new javax.swing.JLabel();
        btnShipOrder = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbDeliveryMan = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        jScrollPane3.setViewportView(jTextPane1);

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Manage Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 186, -1));

        btnAcceptOrder.setBackground(new java.awt.Color(255, 255, 255));
        btnAcceptOrder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAcceptOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/accept.png"))); // NOI18N
        btnAcceptOrder.setText("Accept");
        btnAcceptOrder.setToolTipText("Accept Order");
        btnAcceptOrder.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAcceptOrder.setOpaque(false);
        btnAcceptOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptOrderActionPerformed(evt);
            }
        });
        add(btnAcceptOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 120, 40));

        tblOrder.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Patient Name", "Insurance Id", "Patient Address", "Medicine ID", "Medicine Name", "Quantity", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrder.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tblOrder.setSelectionForeground(new java.awt.Color(102, 102, 255));
        jScrollPane1.setViewportView(tblOrder);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 970, 220));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/back.png"))); // NOI18N
        btnBack.setToolTipText("Back");
        btnBack.setContentAreaFilled(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 40, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Pending Orders to be processed:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, 20));

        btnCheckMedAvailability.setBackground(new java.awt.Color(255, 255, 255));
        btnCheckMedAvailability.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCheckMedAvailability.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/check_avail.png"))); // NOI18N
        btnCheckMedAvailability.setText("Check Availability");
        btnCheckMedAvailability.setOpaque(false);
        btnCheckMedAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckMedAvailabilityActionPerformed(evt);
            }
        });
        add(btnCheckMedAvailability, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, 40));

        tblAcceptedOrders.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblAcceptedOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Patient Name", "Insurance ID", "Patient Address", "Medicine ID", "Medicine Name", "Quantity", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAcceptedOrders);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 970, 230));

        lblCurrentAcceptedOrders.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCurrentAcceptedOrders.setText("Current Accepted Orders:");
        add(lblCurrentAcceptedOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, -1, -1));

        btnShipOrder.setBackground(new java.awt.Color(255, 255, 255));
        btnShipOrder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnShipOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/icons8-shipped-30.png"))); // NOI18N
        btnShipOrder.setText("Ship Order");
        btnShipOrder.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnShipOrder.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnShipOrder.setOpaque(false);
        btnShipOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShipOrderActionPerformed(evt);
            }
        });
        add(btnShipOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 770, 140, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Select Delivery Man");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 730, 140, -1));

        cmbDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDeliveryManActionPerformed(evt);
            }
        });
        add(cmbDeliveryMan, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 730, 150, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/polygonal-bg1100X850.jpg"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1100, 870));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Order order = ecoSystem.getOrderDirectory().getOrderMap().get(tblOrder.getValueAt(selectedRow, 0).toString());
        order.setOrderStatus(OrderStatus.ACCEPTED);
        

        populateTableOrder();
        populateAcceptedOrdersTable();
    }//GEN-LAST:event_btnAcceptOrderActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCheckMedAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckMedAvailabilityActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder.getSelectedRow();
        
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
                
        Medicine med = ecoSystem.getMedicineDirectory().getMedicineCatalogMap().get(tblOrder.getValueAt(selectedRow, 4).toString());
        
        Integer availableQuantity = pharmacy.getMedicineStockMap().get(med);
        if (availableQuantity == null) {
             JOptionPane.showMessageDialog(null,"Medicine is unavailable", "Info", JOptionPane.INFORMATION_MESSAGE);
             return;
        }
        
        int quantityRequested = Integer.parseInt(tblOrder.getValueAt(selectedRow, 6).toString());
        if (availableQuantity.intValue() >= quantityRequested){
            JOptionPane.showMessageDialog(null,"Requested quantity of the medicine is available.", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null,"Requested quantity of the medicine is less than the available stock", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckMedAvailabilityActionPerformed

    private void btnShipOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShipOrderActionPerformed
        // TODO add your handling code here:
        DeliveryMan delMan = (DeliveryMan) cmbDeliveryMan.getSelectedItem();
        for(Order order: ecoSystem.getOrderDirectory().getOrdersByPharmacy(pharmacy)){
            if (order.getOrderStatus().equals(OrderStatus.ACCEPTED)){
                order.setDeliveryMan(delMan);
                order.setOrderStatus(OrderStatus.DELIVERY_REQUESTED);
            }
        }
        
        populateAcceptedOrdersTable();        
    }//GEN-LAST:event_btnShipOrderActionPerformed

    private void cmbDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDeliveryManActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbDeliveryManActionPerformed

    
    private void populateCmbDeliveryMan(){
        cmbDeliveryMan.addItem(null);
        for (Person p: ecoSystem.globalUserDirectory.getByRole(Role.DELIVERY_MAN)){
            cmbDeliveryMan.addItem(p);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptOrder;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckMedAvailability;
    private javax.swing.JButton btnShipOrder;
    private javax.swing.JComboBox<Person> cmbDeliveryMan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel lblCurrentAcceptedOrders;
    private javax.swing.JTable tblAcceptedOrders;
    private javax.swing.JTable tblOrder;
    // End of variables declaration//GEN-END:variables
}
