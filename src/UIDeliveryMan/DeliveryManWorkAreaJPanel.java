/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIDeliveryMan;

import DataStore.CredentialsManager;
import DeliveryMan.DeliveryMan;
import DeliveryMan.DeliveryManDirectory;
import Doctor.Doctor;
import EcoSystem.EcoSystem;
import Order.Order;
import Order.Order.OrderStatus;
import Order.OrderDirectory;
import Patient.Patient;
import Personnel.Person;
import Prescription.Prescription;
import Prescription.PrescriptionDirectory;
import SysAdminUI.Login;
import Utils.FieldsDecorator;
import Utils.NextScreen;
import Utils.SMSSender;
import Utils.StarRatingsUtil;
import java.awt.Color;
import java.time.Instant;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sravya
 */
public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel implements NextScreen {

    private JPanel workArea;
    private EcoSystem ecoSystem;
    private DeliveryMan deliveryMan;
 
    public DeliveryManWorkAreaJPanel(
            JPanel workArea,  
            EcoSystem ecoSystem,
            DeliveryMan deliveryMan) {
        initComponents();
        this.setSize(980, 780);
        this.workArea = workArea;
        this.ecoSystem = ecoSystem;
        this.deliveryMan = deliveryMan;
        jLabelTitle.setText("Delivery Man Home Page - Welcome " + deliveryMan.getPersonDetails().getFullName() + "!");
        FieldsDecorator.decorateTable(tblDeliveryManAssigned, new Color(255, 204, 230));
        FieldsDecorator.decorateTable(tblDelManOrderRequests);
        populateTblDelManOrderRequests();
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDelManOrderRequests = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnProcessOrder = new javax.swing.JButton();
        btnRefreshOrdersTable = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDeliveryManAssigned = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnClearTable = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnViewRatings = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelTitle.setText("Hello Delivery Man!");
        jLabelTitle.setToolTipText("");
        add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 630, -1));

        tblDelManOrderRequests.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblDelManOrderRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient UserName", "Patient Address", "Pharmacy Name", "Pharmacy Address", "Order Status", "Order ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDelManOrderRequests.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tblDelManOrderRequests.setSelectionForeground(new java.awt.Color(51, 51, 255));
        jScrollPane1.setViewportView(tblDelManOrderRequests);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 880, 240));

        btnAssignToMe.setBackground(new java.awt.Color(255, 255, 255));
        btnAssignToMe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAssignToMe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/icons8-connected-people-30.png"))); // NOI18N
        btnAssignToMe.setText("Assign to me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });
        add(btnAssignToMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 150, 40));

        btnProcessOrder.setBackground(new java.awt.Color(255, 255, 255));
        btnProcessOrder.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnProcessOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/icons8-in-transit-30.png"))); // NOI18N
        btnProcessOrder.setText("Deliver Order");
        btnProcessOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessOrderActionPerformed(evt);
            }
        });
        add(btnProcessOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 780, 160, 40));

        btnRefreshOrdersTable.setText("Refresh Orders");
        btnRefreshOrdersTable.setContentAreaFilled(false);
        btnRefreshOrdersTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshOrdersTableActionPerformed(evt);
            }
        });
        add(btnRefreshOrdersTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 130, 40));

        tblDeliveryManAssigned.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblDeliveryManAssigned.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient Address", "Pharmacy Name", "Pharmacy Address", "Order Status", "Order ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDeliveryManAssigned.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tblDeliveryManAssigned.setSelectionForeground(new java.awt.Color(102, 102, 255));
        jScrollPane2.setViewportView(tblDeliveryManAssigned);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 540, 880, 230));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Order Requests");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("My Deliveries");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 490, -1, -1));

        btnClearTable.setBackground(new java.awt.Color(255, 255, 255));
        btnClearTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClearTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/icons8-refresh-30.png"))); // NOI18N
        btnClearTable.setBorder(null);
        btnClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTableActionPerformed(evt);
            }
        });
        add(btnClearTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 490, 40, 30));

        btnLogout.setBackground(new java.awt.Color(255, 255, 255));
        btnLogout.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/logout.png"))); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        btnViewRatings.setBackground(new java.awt.Color(255, 255, 255));
        btnViewRatings.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnViewRatings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/review.png"))); // NOI18N
        btnViewRatings.setText("View my Ratings");
        btnViewRatings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRatingsActionPerformed(evt);
            }
        });
        add(btnViewRatings, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/polygonal-bg1100X850.jpg"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 6, 1100, 840));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed

        int selectedRow = tblDelManOrderRequests.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;
        }

        Order order = ecoSystem
                .getOrderDirectory()
                .getOrderMap()
                .get(tblDelManOrderRequests
                        .getValueAt(selectedRow,5)
                        .toString()
                );
        order.setOrderStatus(OrderStatus.INPROCESS);
        populateTblDelManOrderRequests();
        populateTblDelManAssigned();
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnProcessOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessOrderActionPerformed

        int selectedRow = tblDeliveryManAssigned.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;
        }

        Order order = ecoSystem
                .getOrderDirectory()
                .getOrderMap()
                .get(tblDeliveryManAssigned
                        .getValueAt(selectedRow,5)
                        .toString()
                );
        if(order.getOrderStatus().equals(OrderStatus.DELIVERED)) {
            JOptionPane.showMessageDialog(null, "Parcel already Delivered. Please select a valid row.");
            return;
        }
        
        PrescriptionDirectory prescriptionDirectory = ecoSystem.getPrescriptionDirectory();
        // After the order is delivered, we need to update patient's prescription
        // It is possible that delivery man delivers partial order first (few meds), then log out, come back again and then deliver the remaining meds.
        // This is the case where both order deliveries should fall under same prescription since they are associated with a single appointment. 
        // For such case, we need a global map of appointment-id to Prescription object.
        Prescription prescription = prescriptionDirectory.getPrescription(order.getAppointment().getId());
        if (prescription == null) {
            prescription = new Prescription(order.getAppointment());
            prescription.setPrescriptionDate(order.getAppointment().getDate());
        }
        prescription.setPharmacyName(order.getPharmacy().getEnterpriseName());
        prescription.addMedicine(order.getMedicine(), order.getDosage());
        prescriptionDirectory.addPrescription(order.getAppointment().getId(), prescription);
        order.getPatient().addPrescription(prescription);
        prescription.setDeliveryMan(deliveryMan);
        prescription.setDeliveryDate(Date.from(Instant.now()));
        
        order.setOrderStatus(OrderStatus.DELIVERED);
        populateTblDelManAssigned();
        JOptionPane.showMessageDialog(null, "Delivered");
        
        new SMSSender().sendSMSAsynchronous(order.getPatient().getPersonDetails().getPhoneNumber(), getMedicineDeliveryMessage(prescription));
    }//GEN-LAST:event_btnProcessOrderActionPerformed

    private String getMedicineDeliveryMessage(Prescription prescription) {
        Person doc = prescription.getAppointment().getDoctor();
        Person patient = prescription.getAppointment().getPatient();
        return "Hi " + patient.getPersonDetails().getFullName() + "! " +
                "Your medicine prescription from doctor '" + doc.getPersonDetails().getFullName() + "' has been "
                + "delivered from Pharmacy '" + prescription.getPharmacyName() + "' to the address '" + patient.getPersonDetails().getAddress().toString() +  
                "' at time " + prescription.getDeliveryDate();
    }
    
    private void btnRefreshOrdersTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshOrdersTableActionPerformed
        populateTblDelManOrderRequests();
    }//GEN-LAST:event_btnRefreshOrdersTableActionPerformed

    private void btnClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTableActionPerformed
        // TODO add your handling code here:
        tblDeliveryManAssigned.removeAll();
    }//GEN-LAST:event_btnClearTableActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        nextScreen(workArea, new Login(workArea, ecoSystem), "Login Page");
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnViewRatingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRatingsActionPerformed
        // TODO add your handling code here:
        new StarRatingsUtil().viewPersonRatings("Delivery man reviews", deliveryMan);
    }//GEN-LAST:event_btnViewRatingsActionPerformed

    private void populateTblDelManOrderRequests(){
        DefaultTableModel dtm = (DefaultTableModel) tblDelManOrderRequests.getModel();
        
        dtm.setRowCount(0);
        
        for (Order order: ecoSystem.getOrderDirectory().getOrdersByDelMan(deliveryMan)){
            if (!order.getOrderStatus().equals(OrderStatus.DELIVERY_REQUESTED)){
                continue;
            }
            Object [] row = new Object[6];
            row[0] = order.getPatient().getPersonDetails().getFullName();
            row[1] = order.getPatient().getPatientDetails().getAddress();
            row[2] = order.getPharmacy().getEnterpriseName();
            row[3] = order.getPharmacy().getEnterpriseAddress();
            row[4] = order.getOrderStatus();
            row[5] = order.getOrderId();
            dtm.addRow(row);
        }
    }
    
    private void populateTblDelManAssigned(){
        DefaultTableModel dtm = (DefaultTableModel) tblDeliveryManAssigned.getModel();
        
        dtm.setRowCount(0);
        
        for (Order order: ecoSystem.getOrderDirectory().getOrdersByDelMan(deliveryMan)){
            if ((order.getOrderStatus().equals(OrderStatus.INPROCESS)) || (order.getOrderStatus().equals(OrderStatus.DELIVERED)) || (order.getOrderStatus().equals(OrderStatus.SHIPPED))){
                Object [] row = new Object[6];
                row[0] = order.getPatient().getPersonDetails().getFullName();
                row[1] = order.getPatient().getPatientDetails().getAddress();
                row[2] = order.getPharmacy().getEnterpriseName();
                row[3] = order.getPharmacy().getEnterpriseAddress();
                row[4] = order.getOrderStatus();
                row[5] = order.getOrderId();
                dtm.addRow(row);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnClearTable;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnProcessOrder;
    private javax.swing.JButton btnRefreshOrdersTable;
    private javax.swing.JButton btnViewRatings;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDelManOrderRequests;
    private javax.swing.JTable tblDeliveryManAssigned;
    // End of variables declaration//GEN-END:variables
}
