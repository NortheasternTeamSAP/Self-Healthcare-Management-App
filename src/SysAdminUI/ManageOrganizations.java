/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SysAdminUI;

import EcoSystem.EcoSystem;
import Enterprise.Enterprise;
import Enterprise.EnterpriseType;
import Enterprise.HealthManagementAppEnterprise;
import Enterprise.HospitalEnterprise;
import Enterprise.InsuranceCompanyEnterprise;
import Enterprise.MentalWellnessEnterprise;
import Enterprise.PhysicalWellnessEnterprise;
import Organization.DeliveryDepartmentOrganization;
import Organization.GymOrganization;
import Organization.HealthInsuranceDepartmentOrganization;
import Organization.LaboratoryOrganization;
import Organization.MedicineInventoryOrganization;
import Organization.NutritionDepartmentOrganization;
import Organization.Organization;
import Organization.OrganizationType;
import Organization.PsychiatristOrganization;
import Organization.PatientOrganization;
import Organization.PrimaryCareOrganization;
import Organization.SystemAdminOrganization;
import Personnel.Address;
import Utils.FieldsDecorator;
import Utils.FieldsValidator;
import Utils.NextScreen;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.cert.CollectionCertStoreParameters;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author preet
 */
public class ManageOrganizations extends javax.swing.JPanel implements NextScreen {

    JPanel WorkArea;
    EcoSystem system;
    JPanel backPage;

    /**
     * Creates new form ManageOrganizations
     */
    public ManageOrganizations(JPanel WorkArea, EcoSystem system, JPanel backPage) {
        initComponents();
        this.setSize(1100,850);
        this.WorkArea = WorkArea;
        this.system = system;
        this.backPage = backPage;
        FieldsDecorator.decorateTable(tblOrg);
        
        populateenterprise();
        comboorgtype.setModel(new DefaultComboBoxModel(OrganizationType.values()));
        LoadOrganization();
        populateorganization();

        comboenterprise.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                populateorganization();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrg = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtOrgName = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        comboorgtype = new javax.swing.JComboBox<>();
        comboenterprise = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblOrg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Creation Date", "Organization Name", "Organization Type", "Enterprise Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrg);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, 890, 400));

        jPanel1.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Organization Type");

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Enterprise");

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Organization Name ");

        txtOrgName.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtOrgName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/add.png"))); // NOI18N
        jButton1.setText("Create");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        comboenterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboenterpriseActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Create An Organization");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboenterprise, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboorgtype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtOrgName, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(comboenterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboorgtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtOrgName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 25, -1, 230));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/back.png"))); // NOI18N
        jButton4.setContentAreaFilled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 25, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("List of all organizations within all Enterprises");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/polygonal-bg1100X850.jpg"))); // NOI18N
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, -4, 1100, 850));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        FieldsValidator fieldsValidator = new FieldsValidator();
        boolean error = fieldsValidator.validate(txtOrgName);
        error |= fieldsValidator.validate(comboenterprise);
        error |= fieldsValidator.validate(comboorgtype);
        
        if (error) {
            JOptionPane.showMessageDialog(jPanel1, "There are error in some field(s). Please correct them.");
            return;
        }
        
        OrganizationType type = OrganizationType.getOrganizationType((String)comboorgtype.getSelectedItem());
        String selectedEnterprise = (String) comboenterprise.getSelectedItem();
        long enterpriseId = Long.parseLong(selectedEnterprise.split(":")[1]);
        Enterprise enterprise = system.enterpriseDirectory.getEnterprise(enterpriseId);
        if (enterprise == null) {           
            JOptionPane.showMessageDialog(null, "Cannot find enterprise with id: " + enterpriseId);
            return;
        }
        
        String organizationName = txtOrgName.getText();

        Organization organization = null;
        switch (type) {
            case ADMIN_ORGANIZATION:
                organization = new SystemAdminOrganization(organizationName, enterprise, LocalDate.now());
                break;

            case PATIENT_ORGANIZATION:
                organization = new PatientOrganization(organizationName, enterprise, LocalDate.now());
                 break;

            case HEALTH_INSURANCE_DEPARTMENT:
                //add a way to create your organization
                organization = new HealthInsuranceDepartmentOrganization(organizationName, enterprise, LocalDate.now());
                 break;

            case LABORATORY:
                organization = new LaboratoryOrganization(organizationName, enterprise, LocalDate.now());
                 break;
            case PRIMARY_CARE:
                organization = new PrimaryCareOrganization(organizationName, enterprise, LocalDate.now());
                 break;

            case MEDICINE_INVENTORY:
                //add a way to create your organization
                organization = new MedicineInventoryOrganization(organizationName, enterprise, LocalDate.now());
                 break;

            case DELIVERY_DEPARTMENT:
                //add a way to create your organization
                organization = new DeliveryDepartmentOrganization(organizationName, enterprise, LocalDate.now());
                 break;

            case NUTRITION_DEPARTMENT:
                organization = new NutritionDepartmentOrganization(organizationName, enterprise, LocalDate.now());
                 break;

            case GYM:
                organization = new GymOrganization(organizationName, enterprise, LocalDate.now());
                 break;

            case PSYCHIATRY_DEPARTMENT:
                organization = new GymOrganization(organizationName, enterprise, LocalDate.now());
                 break;

            case INVALID:
                JOptionPane.showMessageDialog(this, "Invalid Enterprise Details ");
                 break;
        }
        
        enterprise.addOrganization(organization);
        system.organizationDirectory.addOrganization(organization);
        LoadOrganization();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        nextScreen(WorkArea, backPage, "SysAdminHomePage");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void comboenterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboenterpriseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboenterpriseActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboenterprise;
    private javax.swing.JComboBox<String> comboorgtype;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrg;
    private javax.swing.JTextField txtOrgName;
    // End of variables declaration//GEN-END:variables

    private void LoadOrganization() {

        DefaultTableModel model = (DefaultTableModel) tblOrg.getModel();
        model.setRowCount(0);
        
        List<Organization> allOrganizations = new ArrayList<>();
        for (Enterprise e : system.enterpriseDirectory.getAllEnterprise()) {
            List<Organization> temp = new ArrayList<>(e.getOrganizations());
            allOrganizations.addAll(temp);
        }
        
        Collections.sort(allOrganizations, new Comparator<Organization>() {
            @Override
            public int compare(Organization o1, Organization o2) {
                return o2.getOrganizationCreationDate().compareTo(o1.getOrganizationCreationDate());
            }
        });
        
        for (Organization o : allOrganizations) {
            Object row[] = new Object[4];
            row[0] = o.getOrganizationCreationDate().toString();
            row[1] = o.getName();
            row[2] = o.getOrganizationType().toString();
            row[3] = o.getEnterprise().getEnterpriseName();
            model.addRow(row);
        }
        
        
//        for (Enterprise e : system.enterpriseDirectory.getAllEnterprise()) {
//            List<Organization> temp = new ArrayList<>(e.getOrganizations());
//            Collections.sort(temp, new Comparator<Organization>() {
//                @Override
//                public int compare(Organization o1, Organization o2) {
//                    return o1.getOrganizationCreationDate().compareTo(o2.getOrganizationCreationDate());
//                }
//            });
//            for (Organization o : temp) {
//                System.out.println("Org is " + o.getName());
//                Object row[] = new Object[4];
//                row[0] = o.getOrganizationCreationDate().toString();
//                row[1] = o.getName();
//                row[2] = o.getOrganizationType().toString();
//                row[3] = o.getEnterprise().getEnterpriseName();
//                model.addRow(row);
//
//            }
//        }
    }

    private void populateenterprise() {
        comboenterprise.removeAllItems();

        for (Enterprise e : system.enterpriseDirectory.getAllEnterprise()) {
            if (e.getEnterpriseType() == EnterpriseType.HEALTH_MANAGEMENT_APP) {
                continue;
            }
            comboenterprise.addItem(e.getEnterpriseName() + ":" + e.getEnterpriseId());
        }
        populateorganization();
      }

    private void populateorganization() {

        comboorgtype.removeAllItems();
        String selectedEnterprise = (String) comboenterprise.getSelectedItem();
        long enterpriseId = Long.parseLong(selectedEnterprise.split(":")[1]);
        Enterprise e = system.enterpriseDirectory.getEnterprise(enterpriseId);
        if (e == null) {           
            JOptionPane.showMessageDialog(null, "Cannot find enterprise with id: " + enterpriseId);
            return;
        }
        
        List<OrganizationType> types = e.getSupportedOrgTypes();
        if (types != null) {
            for (OrganizationType ot : types) {
                comboorgtype.addItem(ot.toString());
            }
        } else {
            comboorgtype.removeAll();
            JOptionPane.showMessageDialog(null, "No supported organizations for selected enterprise");
            return;
        }
    }
}
