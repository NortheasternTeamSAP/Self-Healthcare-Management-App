/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SysAdminUI;

import Counselor.Counselor;
import DataStore.Appointment;
import DataStore.CredentialsManager;
import DataStore.GlobalUserDirectory;
import DeliveryMan.DeliveryMan;
import Dietitian.Dietitian;
import Doctor.Doctor;
import EcoSystem.EcoSystem;
import Enterprise.Enterprise;
import Enterprise.EnterpriseType;
import Enterprise.HealthManagementAppEnterprise;
import Enterprise.HospitalEnterprise;
import Enterprise.InsuranceCompanyEnterprise;
import Enterprise.MentalWellnessEnterprise;
import Enterprise.PhysicalWellnessEnterprise;
import FitnessTrainer.FitnessTrainer;
import Insurance.InsuranceProviderRepresentative;
import Laboratory.LaboratoryAssistant;
import Organization.Organization;
import Organization.OrganizationType;
import Patient.Patient;
import Personnel.Address;
import Personnel.Person;
import Personnel.PersonDetails;
import Personnel.PersonDetails.Gender;
import Personnel.Role;
import static Personnel.Role.DOCTOR;
import Personnel.UserAccount;
import Pharmacy.Pharmacist;
import Utils.ConsoleLogger;
import Utils.FieldsValidator;
import Utils.NextScreen;
import com.toedter.calendar.JDateChooser;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author mrs.katey
 */
public class UpdateAndDeleteRolesJPanel extends javax.swing.JPanel implements NextScreen {
   JPanel WorkArea;
   EcoSystem system;
   ImageIcon logoImage;
   private final JFileChooser fileChooser = new JFileChooser();
   ConsoleLogger log = ConsoleLogger.getLogger();
   JPanel backScreen;
   
   Person selectedPerson;
   Role selectedPersonRole;
   
    /**
     * Creates new form ManageRoles
     */
    public UpdateAndDeleteRolesJPanel(JPanel WorkArea, EcoSystem system, JPanel backScreen) {
        initComponents();
        this.setSize(1100,850);
        this.WorkArea = WorkArea;
        this.system = system;
        this.backScreen = backScreen;
        DefaultTableModel  model = (DefaultTableModel) jTableEmployees.getModel();
        model.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboRoleTypes = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButtonListEmployees = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();
        jPasswordLabel = new javax.swing.JLabel();
        lblAddrCity = new javax.swing.JLabel();
        lblAddrState = new javax.swing.JLabel();
        jPasswordTextField = new javax.swing.JPasswordField();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmployees = new javax.swing.JTable();
        lblEnterprise = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtAddressCountry = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        lblAddrZip = new javax.swing.JLabel();
        txtAddressStreet = new javax.swing.JTextField();
        jComboBoxGender = new javax.swing.JComboBox<>();
        txtAddressZip = new javax.swing.JTextField();
        txtAddressCity = new javax.swing.JTextField();
        jComboBoxAddrState = new javax.swing.JComboBox<>();
        lblOrg = new javax.swing.JLabel();
        lblAddrStreet1 = new javax.swing.JLabel();
        lblAddrCountry = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        txtAddressBuildingUnit = new javax.swing.JTextField();
        comboorgtype = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lblAddrStreet = new javax.swing.JLabel();
        btnLoadRole = new javax.swing.JButton();
        txtDobDateChooser = new com.toedter.calendar.JDateChooser();
        jUsernameLabel = new javax.swing.JLabel();
        comboenterprise = new javax.swing.JComboBox<>();
        txtUsername = new javax.swing.JTextField();
        lblAddrState1 = new javax.swing.JLabel();
        btnUpdateRoles = new javax.swing.JButton();
        btnDeleteRole1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        txtPhoneNumberCountryCode = new javax.swing.JTextField();
        imgLogo = new javax.swing.JLabel();
        btnRemove1 = new javax.swing.JButton();
        btnAttach = new javax.swing.JButton();
        lblAddrZip1 = new javax.swing.JLabel();
        lblAddrZip2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Update and Delete Roles");

        jComboRoleTypes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "DOCTOR", "LABASSISTANT", "INSURANCE_PROVIDER_REP", "PHARMACIST", "DELIVERY_MAN", "DIETITIAN", "TRAINER", "COUNSELOR" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Choose a role");

        jButtonListEmployees.setBackground(new java.awt.Color(255, 255, 255));
        jButtonListEmployees.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonListEmployees.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/check_avail.png"))); // NOI18N
        jButtonListEmployees.setText("List Employees");
        jButtonListEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListEmployeesActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Employees Table");

        jButtonBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/back.png"))); // NOI18N
        jButtonBack.setContentAreaFilled(false);
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButtonBack)
                .addGap(40, 40, 40)
                .addComponent(jLabel6)
                .addContainerGap(478, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboRoleTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButtonListEmployees)))
                .addGap(303, 303, 303))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonBack)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboRoleTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonListEmployees))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, -1, 150));

        jPasswordLabel.setBackground(new java.awt.Color(255, 255, 255));
        jPasswordLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jPasswordLabel.setText("Password");
        jPasswordLabel.setOpaque(true);
        add(jPasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 669, 70, 20));

        lblAddrCity.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblAddrCity.setText("City");
        add(lblAddrCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 680, -1, -1));

        lblAddrState.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblAddrState.setText("State");
        add(lblAddrState, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 740, -1, -1));

        jPasswordTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jPasswordTextField.setToolTipText("");
        jPasswordTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordTextFieldActionPerformed(evt);
            }
        });
        add(jPasswordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 667, 200, 20));

        txtName.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 420, 258, -1));

        jTableEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Name", "Organization", "Enterprise"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEmployees);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 150, 700, 203));

        lblEnterprise.setBackground(new java.awt.Color(255, 255, 255));
        lblEnterprise.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEnterprise.setText("Enterprise");
        lblEnterprise.setOpaque(true);
        add(lblEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 570, 70, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 418, -1, 20));

        txtAddressCountry.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtAddressCountry.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        add(txtAddressCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 760, 260, -1));

        txtPhoneNumber.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 540, 230, 26));

        lblAddrZip.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblAddrZip.setText("ZIP");
        add(lblAddrZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 710, -1, -1));

        txtAddressStreet.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtAddressStreet.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        add(txtAddressStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 610, 260, -1));

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "MALE", "FEMALE", "OTHER" }));
        jComboBoxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGenderActionPerformed(evt);
            }
        });
        add(jComboBoxGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 580, 260, -1));

        txtAddressZip.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtAddressZip.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        add(txtAddressZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 700, 260, -1));

        txtAddressCity.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        add(txtAddressCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 670, 260, -1));

        jComboBoxAddrState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "MA", "WA", "TX", "CA", " " }));
        jComboBoxAddrState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAddrStateActionPerformed(evt);
            }
        });
        add(jComboBoxAddrState, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 730, 260, -1));

        lblOrg.setBackground(new java.awt.Color(255, 255, 255));
        lblOrg.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblOrg.setText("Organization");
        lblOrg.setOpaque(true);
        add(lblOrg, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 600, -1, -1));

        lblAddrStreet1.setText("Unit");
        add(lblAddrStreet1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 640, -1, -1));

        lblAddrCountry.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblAddrCountry.setText("Country");
        add(lblAddrCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 770, -1, -1));

        lblDob.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDob.setText("Date Of Birth");
        add(lblDob, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 500, -1, -1));

        txtAddressBuildingUnit.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtAddressBuildingUnit.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        add(txtAddressBuildingUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 640, 260, -1));

        add(comboorgtype, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 590, 200, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Phone Number:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 540, -1, -1));

        lblAddrStreet.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblAddrStreet.setText("Community/ Street");
        add(lblAddrStreet, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 610, -1, -1));

        btnLoadRole.setBackground(new java.awt.Color(255, 255, 255));
        btnLoadRole.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLoadRole.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/load.png"))); // NOI18N
        btnLoadRole.setText("Load");
        btnLoadRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadRoleActionPerformed(evt);
            }
        });
        add(btnLoadRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, -1, 45));
        add(txtDobDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 500, 260, -1));

        jUsernameLabel.setBackground(new java.awt.Color(255, 255, 255));
        jUsernameLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jUsernameLabel.setText("Username");
        jUsernameLabel.setOpaque(true);
        add(jUsernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 630, 70, 29));

        comboenterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboenterpriseActionPerformed(evt);
            }
        });
        add(comboenterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 560, 200, -1));

        txtUsername.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtUsername.setToolTipText("Enter Username");
        txtUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 630, 200, 20));

        lblAddrState1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblAddrState1.setText("Gender");
        add(lblAddrState1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 580, -1, -1));

        btnUpdateRoles.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdateRoles.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdateRoles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/notes.png"))); // NOI18N
        btnUpdateRoles.setText("Update");
        btnUpdateRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRolesActionPerformed(evt);
            }
        });
        add(btnUpdateRoles, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 700, 120, 41));

        btnDeleteRole1.setBackground(new java.awt.Color(255, 255, 255));
        btnDeleteRole1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDeleteRole1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/delete.png"))); // NOI18N
        btnDeleteRole1.setText("Delete");
        btnDeleteRole1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRole1ActionPerformed(evt);
            }
        });
        add(btnDeleteRole1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Email ID");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 460, -1, -1));

        txtEmailId.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtEmailId.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtEmailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIdActionPerformed(evt);
            }
        });
        add(txtEmailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 460, 260, -1));

        txtPhoneNumberCountryCode.setEditable(false);
        txtPhoneNumberCountryCode.setText("+1");
        txtPhoneNumberCountryCode.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        add(txtPhoneNumberCountryCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 540, 32, 26));

        imgLogo.setBackground(new java.awt.Color(255, 255, 204));
        imgLogo.setIcon(new javax.swing.ImageIcon("C:\\Users\\sravy\\OneDrive\\Pictures\\FinalProject-Icons\\user1new.png")); // NOI18N
        imgLogo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(imgLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 370, 120, 120));

        btnRemove1.setBackground(new java.awt.Color(255, 255, 255));
        btnRemove1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/disagree.png"))); // NOI18N
        btnRemove1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemove1ActionPerformed(evt);
            }
        });
        add(btnRemove1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 500, 50, -1));

        btnAttach.setBackground(new java.awt.Color(255, 255, 255));
        btnAttach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/icons8-attach-30.png"))); // NOI18N
        btnAttach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttachActionPerformed(evt);
            }
        });
        add(btnAttach, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 500, 40, -1));

        lblAddrZip1.setFont(new java.awt.Font("Lucida Grande", 2, 9)); // NOI18N
        lblAddrZip1.setText("*10 digits");
        add(lblAddrZip1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 550, -1, 10));

        lblAddrZip2.setFont(new java.awt.Font("Lucida Grande", 2, 9)); // NOI18N
        lblAddrZip2.setText("*5 digits");
        add(lblAddrZip2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 710, -1, 10));

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/polygonal-bg1100X850.jpg"))); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, -4, 1100, 850));
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void jComboBoxAddrStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAddrStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxAddrStateActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void jPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordTextFieldActionPerformed

    void loadPersonDetails(Person person) {
    
        txtName.setText(person.getPersonDetails().getFullName());
        txtDobDateChooser.setDate(Date.from(person.getPersonDetails().getDob().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        txtPhoneNumber.setText(person.getPersonDetails().getPhoneNumber());
        txtEmailId.setText(person.getPersonDetails().getEmailId());
        int selectedIndex = 0;
        selectedIndex = person.getPersonDetails().getGender() == Gender.MALE ? 1 : 2;
        if (person.getPersonDetails().getGender() == Gender.OTHER) {
            selectedIndex = 3;
        }
        jComboBoxGender.setSelectedIndex(selectedIndex);
        txtAddressStreet.setText(person.getPersonDetails().getAddress().getStreet());
        txtAddressBuildingUnit.setText(person.getPersonDetails().getAddress().getApartment());
        txtAddressCity.setText(person.getPersonDetails().getAddress().getCity());
        txtAddressZip.setText(person.getPersonDetails().getAddress().getZipcode());
        txtAddressCountry.setText(person.getPersonDetails().getAddress().getCountry());
        
        selectedIndex = 0;
        if (person.getPersonDetails().getAddress().getState().equals("MA")) selectedIndex = 1;
        if (person.getPersonDetails().getAddress().getState().equals("WA")) selectedIndex = 2;
        if (person.getPersonDetails().getAddress().getState().equals("TX")) selectedIndex = 3;
        if (person.getPersonDetails().getAddress().getState().equals("CA")) selectedIndex = 4;
        jComboBoxAddrState.setSelectedIndex(selectedIndex);
        txtUsername.setText(person.getUserAccount().getUsername());
        jPasswordTextField.setText(person.getUserAccount().getPassword());
        
        if (person.getPersonDetails().getLogoImage() != null) {
            imgLogo.setIcon(person.getPersonDetails().getLogoImage());
        }
        
        selectedPerson = person;
        
        List<Enterprise> enterpriseList = getPersonEnterprise(person);
        populateEnterpriseCombo(enterpriseList);
    }
    
    List<Enterprise> getPersonEnterprise(Person person) {
        List<Enterprise> allEnterprises = system.enterpriseDirectory.getAllEnterprise();
        List<Enterprise> actualEnterprise = new ArrayList<>();
        
        Enterprise personEnterprise = system.organizationDirectory.getOrganization(person.getOrganizationId()).getEnterprise();
        
        for (Enterprise enterprise : allEnterprises) {
            EnterpriseType ep = enterprise.getEnterpriseType();
            if (personEnterprise.getEnterpriseType().equals(enterprise.getEnterpriseType())) {
                actualEnterprise.add(enterprise);
            }
        }
        
        return actualEnterprise;
    } 
    
    private void btnLoadRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadRoleActionPerformed

        int selectedRow = jTableEmployees.getSelectedRow();
        if (selectedRow < 0) {
            log.error("Selected row from Employees Table is not >= 0");
            return;
        }
        
        String userName = (String) jTableEmployees.getModel().getValueAt(selectedRow, 0);
        Person person = system.globalUserDirectory.get(userName);
        loadPersonDetails(person);
        btnUpdateRoles.setEnabled(true);
    }//GEN-LAST:event_btnLoadRoleActionPerformed

    private void comboenterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboenterpriseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboenterpriseActionPerformed

    private void jComboBoxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxGenderActionPerformed


    
    private void btnUpdateRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRolesActionPerformed
        // TODO add your handling code here:
        
        FieldsValidator fieldsValidator = new FieldsValidator();
        boolean error = fieldsValidator.validate(txtName, txtEmailId, txtUsername, jPasswordTextField, txtPhoneNumber, txtDobDateChooser,
                txtAddressStreet, txtAddressBuildingUnit, txtAddressCity, txtAddressZip, jComboBoxAddrState, txtAddressCountry, jComboBoxGender);
        error |= fieldsValidator.validate(comboorgtype);
        error |= fieldsValidator.validate(comboenterprise);
        
        if (error) {
            JOptionPane.showMessageDialog(jPanel1, "There are error in some field(s). Please correct them.");
            return;
        }
        
        GlobalUserDirectory gd = system.globalUserDirectory;
 
        String name = txtName.getText();
        String userName = txtUsername.getText();
        String password = new String(jPasswordTextField.getPassword());
        String phoneNumber = txtPhoneNumber.getText();
        Date dob = txtDobDateChooser.getDate();
        LocalDate dateOfBirth = dob.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        String addrCommunity = txtAddressStreet.getText();
        String addrCity = txtAddressCity.getText();
        String addrUnit = txtAddressBuildingUnit.getText();
        String addrZip = txtAddressZip.getText();
        String addrState = String.valueOf(jComboBoxAddrState.getSelectedItem());
        String addrCountry = txtAddressCountry.getText();
        Address address = new Address(addrCommunity, addrUnit, addrCity, addrZip, addrState, addrCountry);

        String selectedGender = String.valueOf(jComboBoxGender.getSelectedItem());
        Gender gender = Gender.valueOf(selectedGender);

        Organization selectedOrganization = getSelectedOrganizationFromComboList();
        long organizationId = selectedOrganization.getOrganizationId();

        UserAccount userAccount = new UserAccount(userName, password);
        Icon logo = imgLogo.getIcon();
        
        if (!userName.equals(selectedPerson.getUserAccount().getUsername())) {
            if (gd.get(userName) != null) {
                JOptionPane.showMessageDialog(jPanel1, "Username already exists. Pick a different username.");
                return;
            }
        }
        
        PersonDetails pd = new PersonDetails(
                name, dateOfBirth, gender, address, phoneNumber, 
                userAccount, selectedPerson.getRole(), logo, organizationId);
 
        if (gd.get(selectedPerson.getUserAccount().getUsername()) != null) {
            gd.removeUser(selectedPerson);
            selectedPerson.updateDetails(pd);
            btnUpdateRoles.setEnabled(false);
            gd.createNewUser(selectedPerson);
            
        } else {
            JOptionPane.showMessageDialog(jPanel1, "The selected employee is not a valid employee");
            return;
        }
        
        JOptionPane.showMessageDialog(jPanel1, "User details successfully updated!");
    }//GEN-LAST:event_btnUpdateRolesActionPerformed

    private void jButtonListEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListEmployeesActionPerformed
        // TODO add your handling code here:
        
        String selectedRole = String.valueOf(jComboRoleTypes.getSelectedItem());
        if (selectedRole.equals("Select")) {
                JOptionPane.showMessageDialog(jPanel1, "Select a valid role");
                return;
        }
        
        Role role = Role.valueOf(selectedRole);
        selectedPersonRole = role;
        List<Person> employees = system.globalUserDirectory.getByRole(role);
        if (populateEmployeesTable(employees) == false) {
             JOptionPane.showMessageDialog(jPanel1, "No employees found for the selected role");
        }
    }//GEN-LAST:event_jButtonListEmployeesActionPerformed

    private void btnDeleteRole1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRole1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = jTableEmployees.getSelectedRow();
        if (selectedRow < 0) {
            log.error("Selected row from Employees Table is not >= 0");
            return;
        }
        
        String userName = (String) jTableEmployees.getModel().getValueAt(selectedRow, 0);
        Person person = system.globalUserDirectory.get(userName);
        system.globalUserDirectory.removeUser(person);
        List<Person> employees = system.globalUserDirectory.getByRole(selectedPersonRole);
        populateEmployeesTable(employees);
        JOptionPane.showMessageDialog(jPanel1, "User profile deleted successfully!");
    }//GEN-LAST:event_btnDeleteRole1ActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        nextScreen(WorkArea, backScreen, "System Admin Home Page");
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void txtEmailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIdActionPerformed

    private void btnRemove1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemove1ActionPerformed
        // TODO add your handling code here:
        logoImage = null;
        imgLogo.setIcon(logoImage);
    }//GEN-LAST:event_btnRemove1ActionPerformed

    private void btnAttachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttachActionPerformed
        // TODO add your handling code here:

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            BufferedImage img = null;
            try {
                img = ImageIO.read(file);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(NewRegistrationJPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                //Logger.getLogger(NewRegistrationJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            Image scaled = img.getScaledInstance(120, 120, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(scaled);
            imgLogo.setIcon(icon);

        }
    }//GEN-LAST:event_btnAttachActionPerformed

    boolean populateEmployeesTable(List<Person> employees) {

        DefaultTableModel  model = (DefaultTableModel) jTableEmployees.getModel();
        model.setRowCount(0);
        
        if (employees == null || employees.isEmpty()) {
                return false;
        }

        for (Person person : employees) {
            Object row[] = new Object[4];
            row[0] = person.getUserAccount().getUsername();
            row[1] = person.getPersonDetails().getFullName();
            Organization organization = system.organizationDirectory.getOrganization(person.getOrganizationId());
            row[2] = organization.getName();
            row[3] = organization.getEnterprise().getEnterpriseName();
            model.addRow(row);
        }
         return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAttach;
    private javax.swing.JButton btnDeleteRole1;
    private javax.swing.JButton btnLoadRole;
    private javax.swing.JButton btnRemove1;
    private javax.swing.JButton btnUpdateRoles;
    private javax.swing.JComboBox<String> comboenterprise;
    private javax.swing.JComboBox<String> comboorgtype;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonListEmployees;
    private javax.swing.JComboBox<String> jComboBoxAddrState;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JComboBox<String> jComboRoleTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jPasswordLabel;
    private javax.swing.JPasswordField jPasswordTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEmployees;
    private javax.swing.JLabel jUsernameLabel;
    private javax.swing.JLabel lblAddrCity;
    private javax.swing.JLabel lblAddrCountry;
    private javax.swing.JLabel lblAddrState;
    private javax.swing.JLabel lblAddrState1;
    private javax.swing.JLabel lblAddrStreet;
    private javax.swing.JLabel lblAddrStreet1;
    private javax.swing.JLabel lblAddrZip;
    private javax.swing.JLabel lblAddrZip1;
    private javax.swing.JLabel lblAddrZip2;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblOrg;
    private javax.swing.JTextField txtAddressBuildingUnit;
    private javax.swing.JTextField txtAddressCity;
    private javax.swing.JTextField txtAddressCountry;
    private javax.swing.JTextField txtAddressStreet;
    private javax.swing.JTextField txtAddressZip;
    private com.toedter.calendar.JDateChooser txtDobDateChooser;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtPhoneNumberCountryCode;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

     ButtonGroup radioButtonGroup = new ButtonGroup();
    
   private void populateEnterpriseCombo(List<Enterprise> enterpriseList) {
        comboenterprise.removeAllItems();
        comboenterprise.addItem("Select");
        for(Enterprise enterprise : enterpriseList) {
            comboenterprise.addItem(enterprise.getEnterpriseName() + ":" + enterprise.getEnterpriseId());
        }

        comboenterprise.addItemListener(new ItemListener() {
            
            UpdateAndDeleteRolesJPanel manageRole = null;
            
            @Override
            public void itemStateChanged(ItemEvent e) {
                Enterprise enterprise = manageRole.getSelectedEnterpriseFromComboList();
                if (enterprise == null) {
                    // do nothing
                    return;
                }
                manageRole.populateOrganizationCombo(enterprise.getOrganizations());
            }
            
             private ItemListener init(UpdateAndDeleteRolesJPanel manageRole){
                this.manageRole = manageRole;
                return this;
            }
        }.init(this));
   }
   
   private Enterprise getSelectedEnterpriseFromComboList() {
        String selectEnterprise = (String) comboenterprise.getSelectedItem();
        if (selectEnterprise == null) {
            return null;
        }
        
        if ("Select".equals(selectEnterprise)) {
            // Do nothing
            return null;
        }

        String[] splitResult = selectEnterprise.split(":");
        String enterpriseName = splitResult[0];
        int enterpriseId = Integer.parseInt(splitResult[1]);
        Enterprise enterprise = system.enterpriseDirectory.getEnterprise(enterpriseId);
        if (enterprise == null) {
            JOptionPane.showMessageDialog(jPanel1, "No enterprise found for id " + enterpriseId + "and name " + enterpriseName);
            return null;
        }
        return enterprise;
   }
   
   private Organization getSelectedOrganizationFromComboList() {
       
        String selectedOrganization = (String) comboorgtype.getSelectedItem();
        if (selectedOrganization == null) {
            return null;
        }
        
        if ("Select".equals(selectedOrganization)) {
            // Do nothing
            return null;
        }
        
        Enterprise selectedEnterprise = getSelectedEnterpriseFromComboList();

        String[] splitResult = selectedOrganization.split(":");
        String orgName = splitResult[0];
        int orgId = Integer.parseInt(splitResult[1]);
        Organization organization = selectedEnterprise.getOrganization(orgId);
        if (organization == null) {
            JOptionPane.showMessageDialog(jPanel1, "No organization found for id " + orgId + "and name " + orgName);
            return null;
        }
        return organization;
   }

    private void populateOrganizationCombo(List<Organization> organizations) {
        comboorgtype.removeAllItems();
        comboorgtype.addItem("Select");
        
        if (organizations == null || organizations.isEmpty()) {
            return;
        }
        
        for (Organization organization : organizations) {
            comboorgtype.addItem(organization.getName() + ":" + organization.getOrganizationId());
        }
        
        comboorgtype.addItemListener(new ItemListener() {
            
            UpdateAndDeleteRolesJPanel manageRole = null;
            
            @Override
            public void itemStateChanged(ItemEvent e) {
                Organization organization = manageRole.getSelectedOrganizationFromComboList();
                if (organization == null) {
                    // do nothing
                    return;
                }
            }
             private ItemListener init(UpdateAndDeleteRolesJPanel manageRole){
                this.manageRole = manageRole;
                return this;
            }
        }.init(this));
        
    }
}
