/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SysAdminUI;

import Counselor.Counselor;
import DataStore.Appointment;
import DataStore.CredentialsManager;
import DataStore.GlobalUserDirectory;
import DeliveryMan.DeliveryMan;
import Dietitian.Dietitian;
import Doctor.Doctor;
import EcoSystem.EcoSystem;
import Enterprise.Enterprise;
import Enterprise.EnterpriseType;
import Enterprise.HealthManagementAppEnterprise;
import Enterprise.HospitalEnterprise;
import Enterprise.InsuranceCompanyEnterprise;
import Enterprise.MentalWellnessEnterprise;
import Enterprise.PhysicalWellnessEnterprise;
import FitnessTrainer.FitnessTrainer;
import Insurance.InsuranceProviderRepresentative;
import Laboratory.LaboratoryAssistant;
import Organization.Organization;
import Organization.OrganizationType;
import Patient.Patient;
import Personnel.Address;
import Personnel.Person;
import Personnel.PersonDetails;
import Personnel.PersonDetails.Gender;
import Personnel.Role;
import static Personnel.Role.DOCTOR;
import Personnel.UserAccount;
import Pharmacy.Pharmacist;
import Utils.ConsoleLogger;
import Utils.FieldsValidator;
import Utils.NextScreen;
import com.toedter.calendar.JDateChooser;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author mrs.katey
 */
public class UpdateAndDeleteRolesJPanel extends javax.swing.JPanel implements NextScreen {
   JPanel WorkArea;
   EcoSystem system;
   ImageIcon logoImage;
   private final JFileChooser fileChooser = new JFileChooser();
   ConsoleLogger log = ConsoleLogger.getLogger();
   JPanel backScreen;
   
   Person selectedPerson;
   Role selectedPersonRole;
   
    /**
     * Creates new form ManageRoles
     */
    public UpdateAndDeleteRolesJPanel(JPanel WorkArea, EcoSystem system, JPanel backScreen) {
        initComponents();
        this.WorkArea = WorkArea;
        this.system = system;
        this.backScreen = backScreen;
        DefaultTableModel  model = (DefaultTableModel) jTableEmployees.getModel();
        model.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboRoleTypes = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButtonListEmployees = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();
        jPasswordLabel = new javax.swing.JLabel();
        lblAddrCity = new javax.swing.JLabel();
        lblAddrState = new javax.swing.JLabel();
        jPasswordTextField = new javax.swing.JPasswordField();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmployees = new javax.swing.JTable();
        lblEnterprise = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtAddressCountry = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        lblAddrZip = new javax.swing.JLabel();
        txtAddressStreet = new javax.swing.JTextField();
        jComboBoxGender = new javax.swing.JComboBox<>();
        txtAddressZip = new javax.swing.JTextField();
        txtAddressCity = new javax.swing.JTextField();
        jComboBoxAddrState = new javax.swing.JComboBox<>();
        lblOrg = new javax.swing.JLabel();
        lblAddrStreet1 = new javax.swing.JLabel();
        lblAddrCountry = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        txtAddressBuildingUnit = new javax.swing.JTextField();
        comboorgtype = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lblAddrStreet = new javax.swing.JLabel();
        btnLoadRole = new javax.swing.JButton();
        txtDobDateChooser = new com.toedter.calendar.JDateChooser();
        jUsernameLabel = new javax.swing.JLabel();
        comboenterprise = new javax.swing.JComboBox<>();
        txtUsername = new javax.swing.JTextField();
        lblAddrState1 = new javax.swing.JLabel();
        btnUpdateRoles = new javax.swing.JButton();
        btnDeleteRole1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        txtPhoneNumberCountryCode = new javax.swing.JTextField();
        imgLogo = new javax.swing.JLabel();
        btnRemove1 = new javax.swing.JButton();
        btnAttach = new javax.swing.JButton();
        lblAddrZip1 = new javax.swing.JLabel();
        lblAddrZip2 = new javax.swing.JLabel();

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Update and Delete Roles");

        jComboRoleTypes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "DOCTOR", "LABASSISTANT", "INSURANCE_PROVIDER_REP", "PHARMACIST", "DELIVERY_MAN", "DIETITIAN", "TRAINER", "COUNSELOR" }));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Choose a role");

        jButtonListEmployees.setText("List Employees");
        jButtonListEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListEmployeesActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Employees Table");

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jComboRoleTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButtonListEmployees)
                .addGap(303, 303, 303))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jButtonBack)
                        .addGap(114, 114, 114)
                        .addComponent(jLabel6)))
                .addContainerGap(314, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButtonBack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboRoleTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonListEmployees))
                .addGap(25, 25, 25)
                .addComponent(jLabel4))
        );

        jPasswordLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jPasswordLabel.setText("Password");

        lblAddrCity.setText("City");

        lblAddrState.setText("State");

        jPasswordTextField.setToolTipText("");
        jPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordTextFieldActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jTableEmployees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Username", "Name", "Organization", "Enterprise"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEmployees);

        lblEnterprise.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEnterprise.setText("Enterprise:");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Name:");

        lblAddress.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblAddress.setText("Address:");

        lblAddrZip.setText("Zip");

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "MALE", "FEMALE", "OTHER" }));
        jComboBoxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGenderActionPerformed(evt);
            }
        });

        jComboBoxAddrState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "MA", "WA", "TX", "CA", " " }));
        jComboBoxAddrState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAddrStateActionPerformed(evt);
            }
        });

        lblOrg.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblOrg.setText("Organization");

        lblAddrStreet1.setText("Unit");

        lblAddrCountry.setText("Country");

        lblDob.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblDob.setText("Dob:");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Phone Number:");

        lblAddrStreet.setText("Community/Street");

        btnLoadRole.setBackground(new java.awt.Color(0, 153, 153));
        btnLoadRole.setText("Load");
        btnLoadRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadRoleActionPerformed(evt);
            }
        });

        jUsernameLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jUsernameLabel.setText("Username");

        comboenterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboenterpriseActionPerformed(evt);
            }
        });

        txtUsername.setToolTipText("Enter Username");
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        lblAddrState1.setText("Gender");

        btnUpdateRoles.setBackground(new java.awt.Color(0, 153, 153));
        btnUpdateRoles.setText("Update");
        btnUpdateRoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRolesActionPerformed(evt);
            }
        });

        btnDeleteRole1.setBackground(new java.awt.Color(0, 153, 153));
        btnDeleteRole1.setText("Delete");
        btnDeleteRole1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRole1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Email Id:");

        txtEmailId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailIdActionPerformed(evt);
            }
        });

        txtPhoneNumberCountryCode.setEditable(false);
        txtPhoneNumberCountryCode.setText("+1");

        imgLogo.setBackground(new java.awt.Color(255, 255, 204));
        imgLogo.setText("Upload your photo here");

        btnRemove1.setBackground(new java.awt.Color(204, 204, 255));
        btnRemove1.setText("Remove");
        btnRemove1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemove1ActionPerformed(evt);
            }
        });

        btnAttach.setBackground(new java.awt.Color(255, 255, 102));
        btnAttach.setText("Attach");
        btnAttach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttachActionPerformed(evt);
            }
        });

        lblAddrZip1.setFont(new java.awt.Font("Lucida Grande", 2, 9)); // NOI18N
        lblAddrZip1.setText("*10 digits");

        lblAddrZip2.setFont(new java.awt.Font("Lucida Grande", 2, 9)); // NOI18N
        lblAddrZip2.setText("*5 digits");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(lblDob))
                                .addGap(18, 18, 18)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAddrState1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPhoneNumberCountryCode, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAddrZip1))
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblEnterprise)
                                .addGap(28, 28, 28)
                                .addComponent(comboenterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblOrg)
                                .addGap(18, 18, 18)
                                .addComponent(comboorgtype, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDobDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnRemove1, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                    .addComponent(btnAttach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAddrStreet1)
                            .addComponent(lblAddrStreet)
                            .addComponent(lblAddrCity)
                            .addComponent(lblAddrZip)
                            .addComponent(lblAddrState)
                            .addComponent(lblAddrCountry))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddressBuildingUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAddressZip, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAddrZip2))
                            .addComponent(jComboBoxAddrState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddressCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(83, 83, 83))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(btnUpdateRoles, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(btnLoadRole, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(btnDeleteRole1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLoadRole, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteRole1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDob)
                            .addComponent(txtDobDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhoneNumberCountryCode, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddrZip1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(540, 540, 540)
                        .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAttach)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove1)
                    .addComponent(lblAddrState1)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddrStreet)
                    .addComponent(txtAddressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddrStreet1)
                    .addComponent(txtAddressBuildingUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblAddrCity)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddrZip)
                            .addComponent(txtAddressZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddrZip2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddrState)
                            .addComponent(jComboBoxAddrState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddrCountry)
                    .addComponent(txtAddressCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEnterprise)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOrg)
                            .addComponent(comboorgtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(comboenterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(btnUpdateRoles, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void jComboBoxAddrStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAddrStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxAddrStateActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void jPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordTextFieldActionPerformed

    void loadPersonDetails(Person person) {
    
        txtName.setText(person.getPersonDetails().getFullName());
        txtDobDateChooser.setDate(Date.from(person.getPersonDetails().getDob().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        txtPhoneNumber.setText(person.getPersonDetails().getPhoneNumber());
        txtEmailId.setText(person.getPersonDetails().getEmailId());
        int selectedIndex = 0;
        selectedIndex = person.getPersonDetails().getGender() == Gender.MALE ? 1 : 2;
        if (person.getPersonDetails().getGender() == Gender.OTHER) {
            selectedIndex = 3;
        }
        jComboBoxGender.setSelectedIndex(selectedIndex);
        txtAddressStreet.setText(person.getPersonDetails().getAddress().getStreet());
        txtAddressBuildingUnit.setText(person.getPersonDetails().getAddress().getApartment());
        txtAddressCity.setText(person.getPersonDetails().getAddress().getCity());
        txtAddressZip.setText(person.getPersonDetails().getAddress().getZipcode());
        txtAddressCountry.setText(person.getPersonDetails().getAddress().getCountry());
        
        selectedIndex = 0;
        if (person.getPersonDetails().getAddress().getState().equals("MA")) selectedIndex = 1;
        if (person.getPersonDetails().getAddress().getState().equals("WA")) selectedIndex = 2;
        if (person.getPersonDetails().getAddress().getState().equals("TX")) selectedIndex = 3;
        if (person.getPersonDetails().getAddress().getState().equals("CA")) selectedIndex = 4;
        jComboBoxAddrState.setSelectedIndex(selectedIndex);
        txtUsername.setText(person.getUserAccount().getUsername());
        jPasswordTextField.setText(person.getUserAccount().getPassword());
        
        if (person.getPersonDetails().getLogoImage() != null) {
            imgLogo.setIcon(person.getPersonDetails().getLogoImage());
        }
        
        selectedPerson = person;
        
        List<Enterprise> enterpriseList = getPersonEnterprise(person);
        populateEnterpriseCombo(enterpriseList);
    }
    
    List<Enterprise> getPersonEnterprise(Person person) {
        List<Enterprise> allEnterprises = system.enterpriseDirectory.getAllEnterprise();
        List<Enterprise> actualEnterprise = new ArrayList<>();
        
        Enterprise personEnterprise = system.organizationDirectory.getOrganization(person.getOrganizationId()).getEnterprise();
        
        for (Enterprise enterprise : allEnterprises) {
            EnterpriseType ep = enterprise.getEnterpriseType();
            if (personEnterprise.getEnterpriseType().equals(enterprise.getEnterpriseType())) {
                actualEnterprise.add(enterprise);
            }
        }
        
        return actualEnterprise;
    } 
    
    private void btnLoadRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadRoleActionPerformed

        int selectedRow = jTableEmployees.getSelectedRow();
        if (selectedRow < 0) {
            log.error("Selected row from Employees Table is not >= 0");
            return;
        }
        
        String userName = (String) jTableEmployees.getModel().getValueAt(selectedRow, 0);
        Person person = system.globalUserDirectory.get(userName);
        loadPersonDetails(person);
        btnUpdateRoles.setEnabled(true);
    }//GEN-LAST:event_btnLoadRoleActionPerformed

    private void comboenterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboenterpriseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboenterpriseActionPerformed

    private void jComboBoxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxGenderActionPerformed


    
    private void btnUpdateRolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRolesActionPerformed
        // TODO add your handling code here:
        
        FieldsValidator fieldsValidator = new FieldsValidator();
        boolean error = fieldsValidator.validate(txtName, txtEmailId, txtUsername, jPasswordTextField, txtPhoneNumber, txtDobDateChooser,
                txtAddressStreet, txtAddressBuildingUnit, txtAddressCity, txtAddressZip, jComboBoxAddrState, txtAddressCountry, jComboBoxGender);
        error |= fieldsValidator.validate(comboorgtype);
        error |= fieldsValidator.validate(comboenterprise);
        
        if (error) {
            JOptionPane.showMessageDialog(jPanel1, "There are error in some field(s). Please correct them.");
            return;
        }
        
        GlobalUserDirectory gd = system.globalUserDirectory;
 
        String name = txtName.getText();
        String userName = txtUsername.getText();
        String password = new String(jPasswordTextField.getPassword());
        String phoneNumber = txtPhoneNumber.getText();
        Date dob = txtDobDateChooser.getDate();
        LocalDate dateOfBirth = dob.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        String addrCommunity = txtAddressStreet.getText();
        String addrCity = txtAddressCity.getText();
        String addrUnit = txtAddressBuildingUnit.getText();
        String addrZip = txtAddressZip.getText();
        String addrState = String.valueOf(jComboBoxAddrState.getSelectedItem());
        String addrCountry = txtAddressCountry.getText();
        Address address = new Address(addrCommunity, addrUnit, addrCity, addrZip, addrState, addrCountry);

        String selectedGender = String.valueOf(jComboBoxGender.getSelectedItem());
        Gender gender = Gender.valueOf(selectedGender);

        Organization selectedOrganization = getSelectedOrganizationFromComboList();
        int organizationId = selectedOrganization.getOrganizationId();

        UserAccount userAccount = new UserAccount(userName, password);
        Icon logo = imgLogo.getIcon();
        
        if (!userName.equals(selectedPerson.getUserAccount().getUsername())) {
            if (gd.get(userName) != null) {
                JOptionPane.showMessageDialog(jPanel1, "Username already exists. Pick a different username.");
                return;
            }
        }
        
        PersonDetails pd = new PersonDetails(
                name, dateOfBirth, gender, address, phoneNumber, 
                userAccount, selectedPerson.getRole(), logo, organizationId);
 
        if (gd.get(selectedPerson.getUserAccount().getUsername()) != null) {
            gd.removeUser(selectedPerson);
            selectedPerson.updateDetails(pd);
            btnUpdateRoles.setEnabled(false);
            gd.createNewUser(selectedPerson);
            
        } else {
            JOptionPane.showMessageDialog(jPanel1, "The selected employee is not a valid employee");
            return;
        }
        
        JOptionPane.showMessageDialog(jPanel1, "User details successfully updated!");
    }//GEN-LAST:event_btnUpdateRolesActionPerformed

    private void jButtonListEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListEmployeesActionPerformed
        // TODO add your handling code here:
        
        String selectedRole = String.valueOf(jComboRoleTypes.getSelectedItem());
        if (selectedRole.equals("Select")) {
                JOptionPane.showMessageDialog(jPanel1, "Select a valid role");
                return;
        }
        
        Role role = Role.valueOf(selectedRole);
        selectedPersonRole = role;
        List<Person> employees = system.globalUserDirectory.getByRole(role);
        if (populateEmployeesTable(employees) == false) {
             JOptionPane.showMessageDialog(jPanel1, "No employees found for the selected role");
        }
    }//GEN-LAST:event_jButtonListEmployeesActionPerformed

    private void btnDeleteRole1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRole1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = jTableEmployees.getSelectedRow();
        if (selectedRow < 0) {
            log.error("Selected row from Employees Table is not >= 0");
            return;
        }
        
        String userName = (String) jTableEmployees.getModel().getValueAt(selectedRow, 0);
        Person person = system.globalUserDirectory.get(userName);
        system.globalUserDirectory.removeUser(person);
        List<Person> employees = system.globalUserDirectory.getByRole(selectedPersonRole);
        populateEmployeesTable(employees);
        JOptionPane.showMessageDialog(jPanel1, "User profile deleted successfully!");
    }//GEN-LAST:event_btnDeleteRole1ActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        nextScreen(WorkArea, backScreen, "System Admin Home Page");
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void txtEmailIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailIdActionPerformed

    private void btnRemove1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemove1ActionPerformed
        // TODO add your handling code here:
        logoImage = null;
        imgLogo.setIcon(logoImage);
    }//GEN-LAST:event_btnRemove1ActionPerformed

    private void btnAttachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttachActionPerformed
        // TODO add your handling code here:

        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            BufferedImage img = null;
            try {
                img = ImageIO.read(file);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(NewRegistrationJPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                //Logger.getLogger(NewRegistrationJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            Image scaled = img.getScaledInstance(120, 120, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(scaled);
            imgLogo.setIcon(icon);

        }
    }//GEN-LAST:event_btnAttachActionPerformed

    boolean populateEmployeesTable(List<Person> employees) {

        DefaultTableModel  model = (DefaultTableModel) jTableEmployees.getModel();
        model.setRowCount(0);
        
        if (employees == null || employees.isEmpty()) {
                return false;
        }

        for (Person person : employees) {
            Object row[] = new Object[4];
            row[0] = person.getUserAccount().getUsername();
            row[1] = person.getPersonDetails().getFullName();
            Organization organization = system.organizationDirectory.getOrganization(person.getOrganizationId());
            row[2] = organization.getName();
            row[3] = organization.getEnterprise().getEnterpriseName();
            model.addRow(row);
        }
         return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAttach;
    private javax.swing.JButton btnDeleteRole1;
    private javax.swing.JButton btnLoadRole;
    private javax.swing.JButton btnRemove1;
    private javax.swing.JButton btnUpdateRoles;
    private javax.swing.JComboBox<String> comboenterprise;
    private javax.swing.JComboBox<String> comboorgtype;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonListEmployees;
    private javax.swing.JComboBox<String> jComboBoxAddrState;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JComboBox<String> jComboRoleTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jPasswordLabel;
    private javax.swing.JPasswordField jPasswordTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEmployees;
    private javax.swing.JLabel jUsernameLabel;
    private javax.swing.JLabel lblAddrCity;
    private javax.swing.JLabel lblAddrCountry;
    private javax.swing.JLabel lblAddrState;
    private javax.swing.JLabel lblAddrState1;
    private javax.swing.JLabel lblAddrStreet;
    private javax.swing.JLabel lblAddrStreet1;
    private javax.swing.JLabel lblAddrZip;
    private javax.swing.JLabel lblAddrZip1;
    private javax.swing.JLabel lblAddrZip2;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblOrg;
    private javax.swing.JTextField txtAddressBuildingUnit;
    private javax.swing.JTextField txtAddressCity;
    private javax.swing.JTextField txtAddressCountry;
    private javax.swing.JTextField txtAddressStreet;
    private javax.swing.JTextField txtAddressZip;
    private com.toedter.calendar.JDateChooser txtDobDateChooser;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtPhoneNumberCountryCode;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

     ButtonGroup radioButtonGroup = new ButtonGroup();
    
   private void populateEnterpriseCombo(List<Enterprise> enterpriseList) {
        comboenterprise.removeAllItems();
        comboenterprise.addItem("Select");
        for(Enterprise enterprise : enterpriseList) {
            comboenterprise.addItem(enterprise.getEnterpriseName() + ":" + enterprise.getEnterpriseId());
        }

        comboenterprise.addItemListener(new ItemListener() {
            
            UpdateAndDeleteRolesJPanel manageRole = null;
            
            @Override
            public void itemStateChanged(ItemEvent e) {
                Enterprise enterprise = manageRole.getSelectedEnterpriseFromComboList();
                if (enterprise == null) {
                    // do nothing
                    return;
                }
                manageRole.populateOrganizationCombo(enterprise.getOrganizations());
            }
            
             private ItemListener init(UpdateAndDeleteRolesJPanel manageRole){
                this.manageRole = manageRole;
                return this;
            }
        }.init(this));
   }
   
   private Enterprise getSelectedEnterpriseFromComboList() {
        String selectEnterprise = (String) comboenterprise.getSelectedItem();
        if (selectEnterprise == null) {
            return null;
        }
        
        if ("Select".equals(selectEnterprise)) {
            // Do nothing
            return null;
        }

        String[] splitResult = selectEnterprise.split(":");
        String enterpriseName = splitResult[0];
        int enterpriseId = Integer.parseInt(splitResult[1]);
        Enterprise enterprise = system.enterpriseDirectory.getEnterprise(enterpriseId);
        if (enterprise == null) {
            JOptionPane.showMessageDialog(jPanel1, "No enterprise found for id " + enterpriseId + "and name " + enterpriseName);
            return null;
        }
        return enterprise;
   }
   
   private Organization getSelectedOrganizationFromComboList() {
       
        String selectedOrganization = (String) comboorgtype.getSelectedItem();
        if (selectedOrganization == null) {
            return null;
        }
        
        if ("Select".equals(selectedOrganization)) {
            // Do nothing
            return null;
        }
        
        Enterprise selectedEnterprise = getSelectedEnterpriseFromComboList();

        String[] splitResult = selectedOrganization.split(":");
        String orgName = splitResult[0];
        int orgId = Integer.parseInt(splitResult[1]);
        Organization organization = selectedEnterprise.getOrganization(orgId);
        if (organization == null) {
            JOptionPane.showMessageDialog(jPanel1, "No organization found for id " + orgId + "and name " + orgName);
            return null;
        }
        return organization;
   }

    private void populateOrganizationCombo(List<Organization> organizations) {
        comboorgtype.removeAllItems();
        comboorgtype.addItem("Select");
        
        if (organizations == null || organizations.isEmpty()) {
            return;
        }
        
        for (Organization organization : organizations) {
            comboorgtype.addItem(organization.getName() + ":" + organization.getOrganizationId());
        }
        
        comboorgtype.addItemListener(new ItemListener() {
            
            UpdateAndDeleteRolesJPanel manageRole = null;
            
            @Override
            public void itemStateChanged(ItemEvent e) {
                Organization organization = manageRole.getSelectedOrganizationFromComboList();
                if (organization == null) {
                    // do nothing
                    return;
                }
            }
             private ItemListener init(UpdateAndDeleteRolesJPanel manageRole){
                this.manageRole = manageRole;
                return this;
            }
        }.init(this));
        
    }
}
