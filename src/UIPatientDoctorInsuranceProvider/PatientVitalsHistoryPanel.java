
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIPatientDoctorInsuranceProvider;

import EcoSystem.EcoSystem;
import Patient.Patient;
import Utils.GraphPlotterUtils;
import Utils.NextScreen;
import VitalSign.VitalSigns;
import java.awt.CardLayout;
import java.awt.Color;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Ankur Bywar
 */
public class PatientVitalsHistoryPanel extends javax.swing.JPanel implements NextScreen {
    JPanel WorkAreaPanel;
    Patient patient;
    JFrame mainJFrame;
    EcoSystem ecoSystem;
    /**
     * Creates new form DataOfPatientVitalSignJPanel
     */
    public PatientVitalsHistoryPanel(JPanel WorkAreaPanel, EcoSystem ecoSystem, Patient patient) {
        initComponents();
        this.setSize(1100,850);
        this.WorkAreaPanel = WorkAreaPanel;
        this.patient = patient;
        this.ecoSystem = ecoSystem;
        populateVitalSignTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        levelRenderer1 = new org.jfree.chart.renderer.category.LevelRenderer();
        jDataOfPatientVitalSignPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientsEncounterHistory = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnLineChart = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDataOfPatientVitalSignPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Data Of Patient Vital Signs");
        jDataOfPatientVitalSignPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 20, 310, 42));

        tblPatientsEncounterHistory.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        tblPatientsEncounterHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "vital sign collection Date", "Weight", "Blood Pressure", "Respiratory Rate", "Heart Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatientsEncounterHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientsEncounterHistoryMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tblPatientsEncounterHistoryMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(tblPatientsEncounterHistory);

        jDataOfPatientVitalSignPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 94, 893, 280));

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/back.png"))); // NOI18N
        btnBack.setContentAreaFilled(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jDataOfPatientVitalSignPanel.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jPanel1.setOpaque(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 362, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 248, Short.MAX_VALUE)
        );

        jDataOfPatientVitalSignPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 497, -1, -1));

        btnLineChart.setBackground(new java.awt.Color(255, 255, 255));
        btnLineChart.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnLineChart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/icons8-submit-resume-30.png"))); // NOI18N
        btnLineChart.setText("Show Vitals Trend");
        btnLineChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLineChartActionPerformed(evt);
            }
        });
        jDataOfPatientVitalSignPanel.add(btnLineChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 403, -1, 38));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/polygonal-bg1100X850.jpg"))); // NOI18N
        jDataOfPatientVitalSignPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-9, 6, 1100, 840));

        add(jDataOfPatientVitalSignPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 0, 1090, 850));
    }// </editor-fold>//GEN-END:initComponents

    private void tblPatientsEncounterHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientsEncounterHistoryMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientsEncounterHistoryMouseClicked

    private void tblPatientsEncounterHistoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientsEncounterHistoryMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPatientsEncounterHistoryMouseExited

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        nextScreen(WorkAreaPanel, new PatientHomePagePanel(WorkAreaPanel, ecoSystem, patient), "PatientHomePagePanel");
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLineChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLineChartActionPerformed
        // TODO add your handling code here:

        List<VitalSigns> vitalSignsHistory = patient.getVitalSignsHistory();
        if (vitalSignsHistory == null || vitalSignsHistory.isEmpty()) {
            JOptionPane.showMessageDialog(jDataOfPatientVitalSignPanel, "No vitals history exists");
            return;
        }
        GraphPlotterUtils graphPlotterUtils = new GraphPlotterUtils();
        DefaultCategoryDataset dataset = 
                new PatientVitalSignHistoryHelper().createPatientVitalsSignsDefaultCategoryDataSet(graphPlotterUtils, vitalSignsHistory);
        graphPlotterUtils.createLineChart("Dateforvitals", "Ranges", "All vital Signs trend", "Vital sign", dataset, jPanel1);
    }//GEN-LAST:event_btnLineChartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnLineChart;
    private javax.swing.JPanel jDataOfPatientVitalSignPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jfree.chart.renderer.category.LevelRenderer levelRenderer1;
    private javax.swing.JTable tblPatientsEncounterHistory;
    // End of variables declaration//GEN-END:variables

    private void populateVitalSignTable() {
        
       
        
        DefaultTableModel  model = (DefaultTableModel) tblPatientsEncounterHistory.getModel();
        model.setRowCount(0);
        
        List<VitalSigns> vitalSigns = patient.getVitalSignsHistory();//patient.getEncounterHistory();
       // model.setRowCount(0);
        if ((vitalSigns == null) || vitalSigns.isEmpty()) {
      //  JOptionPane.showMessageDialog(jDataOfPatientVitalSignPanel, "No previous encounters found for patient " + patient.getPatientDetails().getFullName());
          return; 
       }
        for (VitalSigns vs : vitalSigns) {
            Object row[] = new Object[6];
            row[0] = patient.getPatientDetails().getFullName();
            row[1] = vs.getDateForVitalSigns();
            row[2] = vs.getWeight();
            row[3] = vs.getBloodPressure().getLow() + "-" + vs.getBloodPressure().getHigh();
            row[4] = vs.getRespiratoryRate();
            row[5] = vs.getHeartRate();
            model.addRow(row);
        }
    }
}
