/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UIPatientDoctorInsuranceProvider;

import DataStore.Appointment;
import Doctor.Doctor;
import EcoSystem.EcoSystem;
import Enterprise.Enterprise;
import Laboratory.LaboratoryAssistant;
import Laboratory.LaboratoryTestReport;
import Organization.LaboratoryOrganization;
import Organization.Organization;
import Organization.OrganizationType;
import Patient.Patient;
import Personnel.Person;
import Utils.ConsoleLogger;
import Utils.NextScreen;
import Utils.AwsS3Helper;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Ankur Bywar
 */
public class PatientAppointmentDetailsPanel extends javax.swing.JPanel implements NextScreen {
    JPanel workAreaPanel;
    EcoSystem ecosystem;
    Doctor doctor;
    Patient patient;
    Appointment appointment;
    Enterprise hospital;
    DoctorWorkAreaPanel backpage;
    
    ConsoleLogger log = ConsoleLogger.getLogger();
    AwsS3Helper s3helper;
    /**
     * Creates new form PatientAppointmentDetailsPanel
     */
    public PatientAppointmentDetailsPanel(JPanel workAreaPanel, EcoSystem ecosystem, Enterprise hospital, Appointment appointment, JPanel backpage) {
        initComponents();
        this.workAreaPanel = workAreaPanel;
        this.ecosystem = ecosystem;
        this.appointment = appointment;
        this.doctor = (Doctor) appointment.getDoctor();
        this.patient = (Patient) appointment.getPatient();
        this.hospital = hospital;
        this.backpage = (DoctorWorkAreaPanel) backpage;
        this.s3helper = new AwsS3Helper();
        
        populatePatientDetails();
        populateLabAssistantCombo();
        
        if (appointment.getStatus().equals(Appointment.AppointmentStatus.COMPLETED)) {
            btnSubmitNewLabTestRequest1.setEnabled(false);
            btnNewAppointmentDetails.setEnabled(false);
            btnPrescribeNewMedicines.setEnabled(false);
            
        }
        
        if (appointment.getLabTestReport() != null) {
            btnSubmitNewLabTestRequest1.setEnabled(false); // do not allow oprdering new lab test if one is already pending
        }

        
        // Download files from S3
        //  - Daily medicine report (not needed here. Will be needed in patient home page)
        //  - Daily vitals report
        //  - Insurance details
        //  - Current Prescription Details (prescription date, meds, power, dosages etc.)
        // Last appointment details
        // Previous lab reports and lab reports history
        // Perform new lab test (Go to new lab page - pass by reference a lab report object)
        // Prescribe new meds (Go to new meds prescription page - pass by reference a lab report object)
        
        // File opening: https://www.youtube.com/watch?v=DfTpJPEAoH0
    }
    
    void populateLabAssistantCombo() {
        jComboBoxLabAssistantList.removeAllItems();
        jComboBoxLabAssistantList.addItem("Select");
        
        List<Organization> organizations = hospital.getOrganizations();
        for (Organization org : organizations) {
            if (org.getOrganizationType().equals(OrganizationType.LABORATORY)) {
                jComboBoxLabAssistantList.addItem(org.getOrganizationId()+ ":" + org.getName());
            }
        }
    }
    
    void populatePatientDetails() {
        lblAptDatePlaceHolder.setText(appointment.getDate() + " at " + appointment.getAppointmentTimeHours() + ":00");
        lblAddressPlaceHolder.setText(appointment.getPatient().getPersonDetails().getAddress().toString());
        lblAgePlaceHolder.setText(appointment.getPatient().getPersonDetails().getAge() + " years");
        //lblEmailPlaceHolder.setText();
        lblNamePlaceHolder.setText(appointment.getPatient().getPersonDetails().getFullName());
        lblPhoneNumberPlaceHolder.setText(appointment.getPatient().getPersonDetails().getPhoneNumber());       
        lblWeightPlaceHolder.setText(this.patient.getMostRecentVitalSigns() == null ? "Not Available" : this.patient.getMostRecentVitalSigns().getWeight() + " kgs");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPatientDetailPanel = new javax.swing.JPanel();
        lblAddress = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        imgLogo = new javax.swing.JLabel();
        lblNamePlaceHolder = new javax.swing.JLabel();
        lblDob1 = new javax.swing.JLabel();
        lblDobPlaceHolder = new javax.swing.JLabel();
        lblPhoneNumberPlaceHolder = new javax.swing.JLabel();
        lblAddressPlaceHolder = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblAgePlaceHolder = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblWeightPlaceHolder = new javax.swing.JLabel();
        lblWeight1 = new javax.swing.JLabel();
        lblEmailPlaceHolder = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnViewLabTestResults = new javax.swing.JButton();
        jComboBoxLabAssistantList = new javax.swing.JComboBox<>();
        lblName3 = new javax.swing.JLabel();
        btnPrescribeNewMedicines = new javax.swing.JButton();
        lblWeight2 = new javax.swing.JLabel();
        lblAptDatePlaceHolder = new javax.swing.JLabel();
        jBtnViewPreviousAppointments1 = new javax.swing.JButton();
        btnGeneratePatientBill = new javax.swing.JButton();
        btnSubmitNewLabTestRequest1 = new javax.swing.JButton();
        btnNewAppointmentDetails = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        jPatientDetailPanel.setBackground(new java.awt.Color(204, 255, 255));
        jPatientDetailPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));

        lblAddress.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblAddress.setText("Address:");

        lblPhoneNumber.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblPhoneNumber.setText("Phone Number:");

        lblName.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblName.setText("Name:");

        imgLogo.setText("<<No Image>>");

        lblNamePlaceHolder.setText("NamePlaceHolder");

        lblDob1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblDob1.setText("Dob:");

        lblDobPlaceHolder.setText("DobPlaceHolder");

        lblPhoneNumberPlaceHolder.setText("Phone Number Place Holder");

        lblAddressPlaceHolder.setText("AddressPlaceHolder");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 102, 255));
        jLabel4.setText("Appointment Details");

        lblAge.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblAge.setText("Age:");

        lblAgePlaceHolder.setText("AgeHolder");

        lblWeight.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblWeight.setText("Weight:");

        lblWeightPlaceHolder.setText("WeightPlaceHolder");

        lblWeight1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblWeight1.setText("EmailId:");

        lblEmailPlaceHolder.setText("EmailIdPlaceHolder");

        jButton1.setText("Prescription Hisroty");

        jButton2.setText("Patient Insurance Details");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Historical Vitals Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnViewLabTestResults.setText("View laboratory test results");
        btnViewLabTestResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewLabTestResultsActionPerformed(evt);
            }
        });

        jComboBoxLabAssistantList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblName3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblName3.setText("Perform new Lab Test");

        btnPrescribeNewMedicines.setText("Prescribe new medicines");
        btnPrescribeNewMedicines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrescribeNewMedicinesActionPerformed(evt);
            }
        });

        lblWeight2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblWeight2.setText("Appointment Date:");

        lblAptDatePlaceHolder.setText("appointment date place holder");

        jBtnViewPreviousAppointments1.setText("View previous appointments and lab tests for this patient");
        jBtnViewPreviousAppointments1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnViewPreviousAppointments1ActionPerformed(evt);
            }
        });

        btnGeneratePatientBill.setText("Generate patient bill");
        btnGeneratePatientBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneratePatientBillActionPerformed(evt);
            }
        });

        btnSubmitNewLabTestRequest1.setText("Request a laboratory test");
        btnSubmitNewLabTestRequest1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitNewLabTestRequest1ActionPerformed(evt);
            }
        });

        btnNewAppointmentDetails.setText("Complete Appointment");
        btnNewAppointmentDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewAppointmentDetailsActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPatientDetailPanelLayout = new javax.swing.GroupLayout(jPatientDetailPanel);
        jPatientDetailPanel.setLayout(jPatientDetailPanelLayout);
        jPatientDetailPanelLayout.setHorizontalGroup(
            jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(179, 179, 179)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPatientDetailPanelLayout.createSequentialGroup()
                .addGap(0, 126, Short.MAX_VALUE)
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGeneratePatientBill, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrescribeNewMedicines, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(249, 249, 249))
            .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                                .addComponent(lblDob1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDobPlaceHolder))
                            .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                                .addComponent(lblPhoneNumber)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPhoneNumberPlaceHolder))
                            .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                                .addComponent(lblName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNamePlaceHolder))
                            .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPatientDetailPanelLayout.createSequentialGroup()
                                    .addComponent(lblAddress)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblAddressPlaceHolder))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPatientDetailPanelLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblAgePlaceHolder))
                                        .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                                            .addComponent(lblWeight)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(lblWeightPlaceHolder))))
                                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                                        .addComponent(lblWeight2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblAptDatePlaceHolder))
                                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                                        .addComponent(lblWeight1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblEmailPlaceHolder))))))
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSubmitNewLabTestRequest1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                                .addComponent(lblName3)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxLabAssistantList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnViewLabTestResults, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addGap(288, 288, 288)
                        .addComponent(btnNewAppointmentDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                    .addGap(87, 87, 87)
                    .addComponent(jBtnViewPreviousAppointments1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(342, Short.MAX_VALUE)))
        );
        jPatientDetailPanelLayout.setVerticalGroup(
            jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(lblNamePlaceHolder))
                        .addGap(16, 16, 16)
                        .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDob1)
                            .addComponent(lblDobPlaceHolder))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhoneNumber)
                            .addComponent(lblPhoneNumberPlaceHolder))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(lblAddressPlaceHolder)))
                    .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAge)
                    .addComponent(lblAgePlaceHolder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeight)
                    .addComponent(lblWeightPlaceHolder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeight1)
                    .addComponent(lblEmailPlaceHolder))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWeight2)
                    .addComponent(lblAptDatePlaceHolder))
                .addGap(32, 32, 32)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116)
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName3)
                    .addComponent(jComboBoxLabAssistantList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSubmitNewLabTestRequest1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewLabTestResults)
                .addGap(62, 62, 62)
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrescribeNewMedicines, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGeneratePatientBill, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNewAppointmentDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
            .addGroup(jPatientDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPatientDetailPanelLayout.createSequentialGroup()
                    .addGap(424, 424, 424)
                    .addComponent(jBtnViewPreviousAppointments1)
                    .addContainerGap(547, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPatientDetailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 875, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPatientDetailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 887, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1006, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed


        JOptionPane.showMessageDialog(null, "This will download file from Amazon S3 bucket");
        
        String vitalsHistoryImagePath = appointment.getPatientVitalSignsHistoryS3ObjectPath();
        if (vitalsHistoryImagePath == null) {
            JOptionPane.showMessageDialog(null, "No vitals history provided by the patient");
            return;
        }
        
        String patientUsername = appointment.getPatient().getUserAccount().getUsername();
        String vitalsHistoryImageName = "vitals-image-" + patientUsername + "-" + appointment.getId() + "-" + appointment.getDate();
        String localVitalsHistoryImagePath = "/tmp/doctor/" + vitalsHistoryImageName;
        boolean success = s3helper.getObject(vitalsHistoryImagePath, localVitalsHistoryImagePath);
        if (!success) {
            JOptionPane.showMessageDialog(null, "Some unexpected error downloading file from S3");
            return;
        }
        
        log.debug("Successfully downloaded patient's vital sign report from S3");

        try {
            Desktop.getDesktop().open(new File(localVitalsHistoryImagePath));
        } catch (IOException ex) {
            log.debug("Error in opening patient's vital sign report file. Exception: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jBtnViewPreviousAppointments1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnViewPreviousAppointments1ActionPerformed
        // TODO add your handling code here:
        nextScreen(workAreaPanel, new PatientAppointmentHistoyJPanel(workAreaPanel, ecosystem, patient, this), "PatientAppointmentHistoyJPanel");
    }//GEN-LAST:event_jBtnViewPreviousAppointments1ActionPerformed

    private void btnViewLabTestResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewLabTestResultsActionPerformed
        // TODO add your handling code here:
        
        nextScreen(workAreaPanel, new PatientLabTestViewJPanel(workAreaPanel, appointment.getLabTestReport(), this), "PatientLabTestViewJPanel");
    }//GEN-LAST:event_btnViewLabTestResultsActionPerformed

    private void btnSubmitNewLabTestRequest1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitNewLabTestRequest1ActionPerformed
        // TODO add your handling code here:]
        if(jComboBoxLabAssistantList.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please select a Laboratory");
            return;
        }
        
        String selectedLab = (String)jComboBoxLabAssistantList.getSelectedItem();
        int labId = Integer.parseInt(selectedLab.split(":")[0]);
        Organization laboratory = null;
        
        for (Organization org : (List<Organization>) hospital.getOrganizations()) {
            if (org.getOrganizationType().equals(OrganizationType.LABORATORY) && labId == org.getOrganizationId()) {
                laboratory = org; 
            }
        }
        
        if (laboratory == null) {
            JOptionPane.showMessageDialog(null, "No laboratory found with id: " + labId);
            return;
        }
        
        List<Person> labAssistants = laboratory.getAllEmployees();
        for (Person labAssistant : labAssistants) {
            // pick first lab assistant since each laboratory will have one lab assistant
            LaboratoryAssistant labAss = (LaboratoryAssistant) labAssistant;
            LaboratoryTestReport laboratoryTestReport = new LaboratoryTestReport(laboratory, labAss, patient, doctor, appointment, LocalDate.now());
            labAss.assignLabTest(laboratoryTestReport);
            appointment.setLabTestReport(laboratoryTestReport);
            break;
        }
        
        JOptionPane.showMessageDialog(null, "Lab test requested");
        btnSubmitNewLabTestRequest1.setEnabled(false);
    }//GEN-LAST:event_btnSubmitNewLabTestRequest1ActionPerformed

    private void btnNewAppointmentDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewAppointmentDetailsActionPerformed
        // TODO add your handling code here:
        
        appointment.setStatus(Appointment.AppointmentStatus.COMPLETED);
        patient.completeDoctorAppointment(appointment);
        
        btnSubmitNewLabTestRequest1.setEnabled(false);
        btnPrescribeNewMedicines.setEnabled(false);
        btnNewAppointmentDetails.setEnabled(false);
        
    }//GEN-LAST:event_btnNewAppointmentDetailsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        
        backpage.reload();
        nextScreen(workAreaPanel, backpage, "Patient home page");
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        JOptionPane.showMessageDialog(null, "This will download insurance details file from Amazon S3 bucket");
        
        String s3insuranceFileKey = appointment.getPatientInsuranceFileS3ObjectPath();
        if (s3insuranceFileKey == null) {
            JOptionPane.showMessageDialog(null, "No insurance provided by the patient while booking appointment");
            return;
        }
        
        String patientUsername = appointment.getPatient().getUserAccount().getUsername();
        String insuranceFileName = "insurance-detail-file-" + patientUsername;
        String insuranceFilePath = "/tmp/doctor/" + insuranceFileName;
        boolean success = s3helper.getObject(s3insuranceFileKey, insuranceFilePath);
        if (!success) {
            JOptionPane.showMessageDialog(null, "Some unexpected error downloading file from S3");
            return;
        }
        
        log.debug("Successfully downloaded patient's insurance file from S3");

        try {
            Desktop.getDesktop().open(new File(insuranceFilePath));
        } catch (IOException ex) {
            log.debug("Error in opening patient's insurance file. Exception: " + ex.getMessage());
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnGeneratePatientBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneratePatientBillActionPerformed
        // TODO add your handling code here:
        
        nextScreen(workAreaPanel, new GeneratePatientBillJPanel(workAreaPanel, ecosystem, appointment, this), TOOL_TIP_TEXT_KEY);
        
    }//GEN-LAST:event_btnGeneratePatientBillActionPerformed

    private void btnPrescribeNewMedicinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrescribeNewMedicinesActionPerformed
        // TODO add your handling code here:
        nextScreen(workAreaPanel, new PrescribeMedicinesJPanel(workAreaPanel, ecosystem, appointment, this), TOOL_TIP_TEXT_KEY);
    }//GEN-LAST:event_btnPrescribeNewMedicinesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnGeneratePatientBill;
    private javax.swing.JButton btnNewAppointmentDetails;
    private javax.swing.JButton btnPrescribeNewMedicines;
    private javax.swing.JButton btnSubmitNewLabTestRequest1;
    private javax.swing.JButton btnViewLabTestResults;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JButton jBtnViewPreviousAppointments1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBoxLabAssistantList;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPatientDetailPanel;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAddressPlaceHolder;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAgePlaceHolder;
    private javax.swing.JLabel lblAptDatePlaceHolder;
    private javax.swing.JLabel lblDob1;
    private javax.swing.JLabel lblDobPlaceHolder;
    private javax.swing.JLabel lblEmailPlaceHolder;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName3;
    private javax.swing.JLabel lblNamePlaceHolder;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPhoneNumberPlaceHolder;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblWeight1;
    private javax.swing.JLabel lblWeight2;
    private javax.swing.JLabel lblWeightPlaceHolder;
    // End of variables declaration//GEN-END:variables
}
