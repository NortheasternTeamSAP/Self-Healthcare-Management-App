/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UICounselorDietitianFitnessTrainer;

import Counselor.Counselor;
import Dietitian.Dietitian;
import EcoSystem.EcoSystem;
import FitnessTrainer.FitnessTrainer;
import Patient.Patient;
import Personnel.Person;
import com.toedter.calendar.JDateChooser;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author preet
 */
public class PatientBookAnAppointment extends javax.swing.JPanel {
   JPanel WorkArea;
   EcoSystem system;
   Patient p ;
   int flag=0;
   int selectedAppointmentTime = -1;
   String restrictions;
   String cheifcomplaint;
   String medication;
    /**
    /**
     * Creates new form PatientDieticianBookAppointment
     */
    public PatientBookAnAppointment(JPanel WorkArea,EcoSystem system,Patient p,int flag) {
        initComponents();        
        this.WorkArea=WorkArea;
        this.system=system;
        this.p=p;
        this.flag=flag;
        
        if(flag==1){
            jLabel1.setText("Book an Appointment With your Dietitian");
            jLabel2.setText("Select a Dietician");
            populatedietiticancombo();
        }
        else if (flag==2)
        {
        jLabel1.setText("Book an Appointment With your Fitness Trainer");
        jLabel2.setText("Select a FitnessTrainer");
        jLabel4.setText("Please indiacte any Body Ailments or Injuries ");
        populatefitnesscombo();
        }
       if(flag==3)
        {
        jLabel1.setText("Book an Appointment With your Counselor");
        jLabel2.setText("Select a Counselor");
        jLabel4.setText("Please Indicate of any previous Diagnosis \n or Mental health Conditions");
              populatecounselorcombo();
        
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboapp = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        datechooser = new com.toedter.calendar.JDateChooser();
        confirmapp = new javax.swing.JButton();
        backf = new javax.swing.JButton();
        timepanel = new javax.swing.JPanel();
        btn9 = new javax.swing.JButton();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtmedication = new javax.swing.JTextField();
        txtallergies = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        txtDietrestrict1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 780, 50));

        comboapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboappActionPerformed(evt);
            }
        });
        add(comboapp, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, 162, 32));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 255));
        jLabel2.setText("Select the Dietitian :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 153, 255));
        jLabel3.setText("Select a date :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 100, 20));
        add(datechooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 180, 32));

        confirmapp.setBackground(new java.awt.Color(255, 255, 255));
        confirmapp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        confirmapp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/view_past_appointment.png"))); // NOI18N
        confirmapp.setText("Schedule Your Appointment ");
        confirmapp.setEnabled(false);
        confirmapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmappActionPerformed(evt);
            }
        });
        add(confirmapp, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 690, 300, 50));

        backf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/back.png"))); // NOI18N
        backf.setContentAreaFilled(false);
        backf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backfActionPerformed(evt);
            }
        });
        add(backf, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 33, -1, -1));

        timepanel.setBackground(new java.awt.Color(255, 255, 255));
        timepanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select A Time Slot "));

        btn9.setBackground(new java.awt.Color(204, 255, 255));
        btn9.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btn9.setText("9AM");
        btn9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn10.setBackground(new java.awt.Color(204, 255, 255));
        btn10.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btn10.setText("10AM");
        btn10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });

        btn11.setBackground(new java.awt.Color(204, 255, 255));
        btn11.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btn11.setText("11AM");
        btn11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn11ActionPerformed(evt);
            }
        });

        btn1.setBackground(new java.awt.Color(204, 255, 255));
        btn1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btn1.setText("1PM");
        btn1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(204, 255, 255));
        btn2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btn2.setText("2PM");
        btn2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setBackground(new java.awt.Color(204, 255, 255));
        btn3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btn3.setText("3PM");
        btn3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout timepanelLayout = new javax.swing.GroupLayout(timepanel);
        timepanel.setLayout(timepanelLayout);
        timepanelLayout.setHorizontalGroup(
            timepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn11, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        timepanelLayout.setVerticalGroup(
            timepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timepanelLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(timepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn9)
                    .addComponent(btn10)
                    .addComponent(btn11)
                    .addComponent(btn1)
                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn3))
                .addGap(17, 17, 17))
        );

        add(timepanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 630, -1));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/create_meal.png"))); // NOI18N
        jLabel4.setText("Specify any food allergies or Diet Restrictions");
        jLabel4.setOpaque(true);
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 330, 30));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/medication.png"))); // NOI18N
        jLabel5.setText("Specify Any Medications you are currently on ");
        jLabel5.setOpaque(true);
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, 330, 30));

        txtmedication.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtmedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmedicationActionPerformed(evt);
            }
        });
        add(txtmedication, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 470, 233, 30));

        txtallergies.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtallergies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtallergiesActionPerformed(evt);
            }
        });
        add(txtallergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 420, 233, 30));

        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCheckBox1.setText("I Agree to Recieve Marketing Email ");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        add(jCheckBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 590, -1, -1));

        jCheckBox4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCheckBox4.setText(" I Agree To Terms and Conditions ");
        add(jCheckBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 650, -1, -1));

        jCheckBox3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCheckBox3.setText("I Agree to the Privacy Policy ");
        add(jCheckBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 620, -1, -1));

        txtDietrestrict1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        txtDietrestrict1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDietrestrict1ActionPerformed(evt);
            }
        });
        add(txtDietrestrict1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 530, 233, 30));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/icons8-complaint-30.png"))); // NOI18N
        jLabel6.setText("Chief Complaints");
        jLabel6.setOpaque(true);
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 530, 320, 27));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/polygonal-bg1100X850.jpg"))); // NOI18N
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 850));
    }// </editor-fold>//GEN-END:initComponents

    private void comboappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboappActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboappActionPerformed

    private void confirmappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmappActionPerformed
       
             datechooser.setForeground(Color.white);
             comboapp.setForeground(Color.white);
             txtallergies.setForeground(Color.white);
             txtmedication.setForeground(Color.white);
             txtDietrestrict1.setForeground(Color.white);  
             jCheckBox1.setForeground(Color.white);
             jCheckBox3.setForeground(Color.white);
             jCheckBox4.setForeground(Color.white);
        
            boolean error = false;
            String restrictions=txtallergies.getText();
            String cheifcomplaint=txtDietrestrict1.getText();
            String medication=txtmedication.getText();
            
            if (datechooser.getDate() == null) {
                datechooser.setForeground(Color.red);
                error = true;
            }
            
            if (comboapp.getSelectedItem() == null) {
                comboapp.setForeground(Color.red);
                error = true;
            }
            
            if (StringUtils.isEmpty(txtallergies.getText())) {
                txtallergies.setForeground(Color.red);
                error = true;
            }
            
            if (StringUtils.isEmpty(txtmedication.getText())) {
                txtmedication.setForeground(Color.red);
                error = true;
            }
            
            if (StringUtils.isEmpty(txtDietrestrict1.getText())) {
                txtDietrestrict1.setForeground(Color.red);
                error = true;
            }
            
            if (!jCheckBox1.isSelected()) {
                jCheckBox1.setForeground(Color.red);
                error = true;
            }
            
            if (!jCheckBox3.isSelected()) {
                jCheckBox3.setForeground(Color.red);
                error = true;
            }
            
            if (!jCheckBox4.isSelected()) {
                jCheckBox4.setForeground(Color.red);
                error = true;
            }
            

            if (error) {
                JOptionPane.showMessageDialog(timepanel, "There are error in some field(s). Please correct them.");
                return;
            }
            
  if(Checkconstraint()==true){      
        if (flag == 1) {
                
            Dietitian selectedDietitian = (Dietitian) comboapp.getSelectedItem();
            LocalDate date = (LocalDate) datechooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            
            if (p.scheduleDietitianAppointment(selectedDietitian, date, selectedAppointmentTime,restrictions,cheifcomplaint,medication) == true) {
             
           JOptionPane.showMessageDialog(datechooser, "Appointment Booked Successfully with Dietician   :" + selectedDietitian.getDietitianDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            } else {
                JOptionPane.showMessageDialog(datechooser, "The appointment is Not available with dietitian  :" + selectedDietitian.getDietitianDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            }

            WorkArea.remove(this);
            Component[] componentArray = WorkArea.getComponents();
            Component component = componentArray[componentArray.length - 1];
            PatientDieticianDashboard d = (PatientDieticianDashboard) component;
            d.populateUpcomingDieticianAppointments();
            CardLayout layout = (CardLayout) WorkArea.getLayout();
            layout.previous(WorkArea);
        } else if (flag == 2) {
            FitnessTrainer selectedFitnessTrainer = (FitnessTrainer) comboapp.getSelectedItem();
            LocalDate date = (LocalDate) datechooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            if (p.scheduleFitnessAppointment(selectedFitnessTrainer, date, selectedAppointmentTime,restrictions,cheifcomplaint,medication) == true) {
                
                JOptionPane.showMessageDialog(datechooser, "Appointment Booked Successfully with FitnessTrainer   :" + selectedFitnessTrainer.getFitnessTrainerDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            } else {
                JOptionPane.showMessageDialog(datechooser, "The appointment is Not available with FitnessTrainer   :" + selectedFitnessTrainer.getFitnessTrainerDetails().getFullName() + " on  : " + date + " and Time : "+selectedAppointmentTime+":00 hrs");
            }
            WorkArea.remove(this);
            Component[] componentArray = WorkArea.getComponents();
            Component component = componentArray[componentArray.length - 1];
            PatientFitnessDashboard d = (PatientFitnessDashboard) component;
            d.populateUpcomingFitnessTrainerAppointments();
            CardLayout layout = (CardLayout) WorkArea.getLayout();
            layout.previous(WorkArea);
        } else {
            Counselor selectedCounselor = (Counselor) comboapp.getSelectedItem();
            LocalDate date = (LocalDate) datechooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            if (p.scheduleCounselorAppointment(selectedCounselor, date, selectedAppointmentTime,restrictions,cheifcomplaint,medication) == true) {
                JOptionPane.showMessageDialog(datechooser, "Appointment Booked Successfully with selectedCounselor   :" + selectedCounselor.getPersonDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            } else {
                JOptionPane.showConfirmDialog(datechooser, "The appointment is Not available with Counselor   :" + selectedCounselor.getPersonDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            }
            WorkArea.remove(this);
            Component[] componentArray = WorkArea.getComponents();
            Component component = componentArray[componentArray.length-1];       
            PatientCounselorDashboard d = (PatientCounselorDashboard) component;
            d.populateUpcomingCounselorAppointments();
            CardLayout layout = (CardLayout) WorkArea.getLayout();
            layout.previous(WorkArea);
        }
  }
 
    }//GEN-LAST:event_confirmappActionPerformed

    private void backfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backfActionPerformed
        if(flag==1){
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientDieticianDashboard d=(PatientDieticianDashboard)component;
        d.populateUpcomingDieticianAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);     
        }
        else if (flag==2){
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientFitnessDashboard d=(PatientFitnessDashboard)component;
        d.populateUpcomingFitnessTrainerAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);
        }
        
        else {
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientCounselorDashboard d=(PatientCounselorDashboard)component;
        d.populateUpcomingCounselorAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);}
  
    }//GEN-LAST:event_backfActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        selectedAppointmentTime = 9;
        btn9.setBackground(Color.YELLOW);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.GRAY);
        confirmapp.setEnabled(true);
        

        
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
         selectedAppointmentTime = 10;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.YELLOW);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.GRAY);
       confirmapp.setEnabled(true);
    
    }//GEN-LAST:event_btn10ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        selectedAppointmentTime = 14;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.YELLOW);
        btn3.setBackground(Color.GRAY);
        confirmapp.setEnabled(true);
        

    }//GEN-LAST:event_btn2ActionPerformed

    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
      selectedAppointmentTime = 11;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.YELLOW);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.GRAY);
        confirmapp.setEnabled(true);
        
       
    }//GEN-LAST:event_btn11ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
       selectedAppointmentTime = 13;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.YELLOW);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.GRAY);
        confirmapp.setEnabled(true);
        
        
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        selectedAppointmentTime = 15;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.YELLOW);
       confirmapp.setEnabled(true);
    }//GEN-LAST:event_btn3ActionPerformed

    private void txtmedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmedicationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmedicationActionPerformed

    private void txtDietrestrict1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDietrestrict1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDietrestrict1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void txtallergiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtallergiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtallergiesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backf;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn9;
    private javax.swing.JComboBox<Object> comboapp;
    private javax.swing.JButton confirmapp;
    private com.toedter.calendar.JDateChooser datechooser;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel timepanel;
    private javax.swing.JTextField txtDietrestrict1;
    private javax.swing.JTextField txtallergies;
    private javax.swing.JTextField txtmedication;
    // End of variables declaration//GEN-END:variables

    private void populatedietiticancombo() {
        comboapp.removeAllItems();
        for (Person p : system.globalUserDirectory.getAllDietitians()) {
            comboapp.addItem(p);
        }
    }

    private void populatefitnesscombo() {
        comboapp.removeAllItems();
        for (Person f : system.globalUserDirectory.getAllFitnessTrainers()) {
            comboapp.addItem(f);
        }
    }

    private void populatecounselorcombo() {
        comboapp.removeAllItems();
        for (Person c : system.globalUserDirectory.getAllCounselors()) {
            comboapp.addItem(c);
        }
    }
       
    private boolean Checkconstraint() {
        if (txtmedication.getText().isEmpty()|| txtallergies.getText().isEmpty()||txtDietrestrict1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please provide all the details ");
            return false;
        } else {

            if ( jCheckBox3.isSelected() && jCheckBox4.isSelected()) {

                return true;
            } else {
                JOptionPane.showMessageDialog(this, "Please Agree to our privacy policy and Terms & Conditions");
                return false;

            }

        }
    }

}
