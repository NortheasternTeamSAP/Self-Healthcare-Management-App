/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.PharmacistRole;

import DeliveryMan.DeliveryMan;
import EcoSystem.EcoSystem;
import Personnel.UserAccount;
import javax.swing.JPanel;
import Pharmacy.PharmacyDirectory;
import Medicine.MedicineDirectory;
import Order.Order;
import Order.OrderDirectory;
import java.awt.CardLayout;
import java.awt.Graphics;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sravya
 */
//Add patient name and address in order table

public class ManageOrders extends javax.swing.JPanel {

    private JPanel workArea;
    private UserAccount account;
    private EcoSystem ecoSystem;
    private PharmacyDirectory pharmacyDirectory;
    private MedicineDirectory medicineDirectory;
    private OrderDirectory orderDirectory;
    
    public ManageOrders(
            JPanel workArea,
            UserAccount account, 
            EcoSystem ecoSystem, 
            PharmacyDirectory pharmacyDirectory, 
            MedicineDirectory medicineDirectory, 
            OrderDirectory orderDirectory) {
        
        initComponents();
        this.workArea = workArea;
        this.ecoSystem = ecoSystem;
        this.account = account;
        this.pharmacyDirectory = pharmacyDirectory;
        this.medicineDirectory = medicineDirectory;
        this.orderDirectory = orderDirectory;
        populateTable();
        populateCmbDeliveryMan();
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.
    }
    
    public void populateCmbDeliveryMan(){
     
        cmbDeliveryMan.removeAllItems();
        cmbDeliveryMan.addItem(" ");
        for(DeliveryMan delman: ecoSystem.getDeliveryManDirectory().getDeliveryManMap().getAllValues()){
            String display = delman.getDeliveryManDetails().getFullName();
            cmbDeliveryMan.addItem(display); //to add name from Person details class
        
        }
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblOrder1.getModel();
        dtm.setRowCount(0);
        
        for(Order order: ecoSystem.getOrderDirectory().orderMap.getAllValues()){
            if(account.getUsername().equals(order.getPharmacy().getPharmacyName())) { //check condition
                Object [] row = new Object[5];
                row[0] = order;
                row[1] = order.getOrderID();
                row[2] = order.getMedicine().getMedicineName(); //med name
                row[3] = order.getQuantity();
                row[4] = order.getOrderStatus();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAcceptOrder = new javax.swing.JButton();
        btnDeliverOrder = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cmbDeliveryMan = new javax.swing.JComboBox<>();
        btnConfirm = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete6 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Manage Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 38, 186, -1));

        btnAcceptOrder.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnAcceptOrder.setIcon(new javax.swing.ImageIcon("C:\\Users\\sravy\\OneDrive\\Pictures\\A4 pics\\3d check mark.png")); // NOI18N
        btnAcceptOrder.setText("Accept");
        btnAcceptOrder.setToolTipText("Accept Order");
        btnAcceptOrder.setContentAreaFilled(false);
        btnAcceptOrder.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAcceptOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptOrderActionPerformed(evt);
            }
        });
        add(btnAcceptOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 100, 30));

        btnDeliverOrder.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnDeliverOrder.setIcon(new javax.swing.ImageIcon("C:\\Users\\sravy\\OneDrive\\Pictures\\A4 pics\\deliver order.png")); // NOI18N
        btnDeliverOrder.setText("Deliver Order");
        btnDeliverOrder.setContentAreaFilled(false);
        btnDeliverOrder.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDeliverOrder.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnDeliverOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeliverOrderActionPerformed(evt);
            }
        });
        add(btnDeliverOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 140, 40));

        tblOrder1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblOrder1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Patient Name", "Patient Address", "Medicine Name", "Quantity", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrder1.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tblOrder1.setSelectionForeground(new java.awt.Color(102, 102, 255));
        jScrollPane1.setViewportView(tblOrder1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 98, 822, 131));

        jLabel2.setText("Select Delivery Man");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 107, -1));

        cmbDeliveryMan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDeliveryManActionPerformed(evt);
            }
        });
        add(cmbDeliveryMan, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 130, 20));

        btnConfirm.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnConfirm.setIcon(new javax.swing.ImageIcon("C:\\Users\\sravy\\OneDrive\\Pictures\\A4 pics\\confirm.png")); // NOI18N
        btnConfirm.setText("Confirm");
        btnConfirm.setContentAreaFilled(false);
        btnConfirm.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnConfirmMouseClicked(evt);
            }
        });
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        add(btnConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 110, 30));

        btnBack.setText("Back");
        btnBack.setToolTipText("Back");
        btnBack.setContentAreaFilled(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 38, 40, -1));

        btnDelete6.setText("Deny");
        btnDelete6.setToolTipText("Delete");
        btnDelete6.setContentAreaFilled(false);
        btnDelete6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete6ActionPerformed(evt);
            }
        });
        add(btnDelete6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 110, 29));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder1.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Order order = (Order)tblOrder1.getValueAt(selectedRow, 0);
        if(order.getOrderStatus().equals("Order has been placed!")) {
            order.setOrderStatus("Order has been accepted!");
        }

        else {
            JOptionPane.showMessageDialog(null, "Order was either accepted or completed");
            return;
        }

        populateTable();
    }//GEN-LAST:event_btnAcceptOrderActionPerformed

    private void btnDeliverOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeliverOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder1.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Order order = (Order)tblOrder1.getValueAt(selectedRow, 0);
        switch (order.getOrderStatus()) {
            case "Order has been accepted!":
                order.setOrderStatus("Order is ready for delivery");
                order.setAssign(true);
                break;
            case "Order has been placed!":
                JOptionPane.showMessageDialog(null, "Order should be accepted first");
                return;
            default:
                JOptionPane.showMessageDialog(null, "Order is ready for delivery");
                return;
        }

        populateTable();
    }//GEN-LAST:event_btnDeliverOrderActionPerformed

    private void cmbDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDeliveryManActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDeliveryManActionPerformed

    private void btnConfirmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmMouseClicked

    }//GEN-LAST:event_btnConfirmMouseClicked

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:

        
        String name = (String) cmbDeliveryMan.getSelectedItem();
        if(name == " "){
            JOptionPane.showMessageDialog(null,"Select a Delivery Man","Selected Delivery Man" ,JOptionPane.WARNING_MESSAGE);
        }
        else{
            JOptionPane.showMessageDialog(null,"Selected Delivery Man: " + name);

        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDelete6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete6ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrder1.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null,"Select a row from table!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Order order = (Order) tblOrder1.getValueAt(selectedRow, 0);
        orderDirectory.deleteOrder(order);
        populateTable();
        JOptionPane.showMessageDialog(null,"Order denied! Sorry, we don't have stock!", "Warning", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnDelete6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptOrder;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnDelete6;
    private javax.swing.JButton btnDeliverOrder;
    private javax.swing.JComboBox<String> cmbDeliveryMan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrder1;
    // End of variables declaration//GEN-END:variables
}
