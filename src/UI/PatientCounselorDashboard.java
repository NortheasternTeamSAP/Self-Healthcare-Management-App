/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;


import Counselor.CounselorAppointment;
import EcoSystem.EcoSystem;
import Patient.Patient;
import java.awt.CardLayout;
import java.awt.Component;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author preet
 */
public class PatientCounselorDashboard extends javax.swing.JPanel {
   JPanel WorkArea;
   EcoSystem system;
   Patient p ;
    /**
     * Creates new form PatientCounselorDashborad
     */
    public PatientCounselorDashboard(JPanel WorkArea,EcoSystem system,Patient p ) {
        initComponents();
        this.setSize(1100,850);
        this.WorkArea=WorkArea;
        this.system=system;
        this.p=p;
        populateUpcomingCounselorAppointments();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        UpcomingDieticianAppointments = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/view_past_appointment.png"))); // NOI18N
        jButton2.setText("View Past Appointment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 321, -1, -1));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/view_notes.png"))); // NOI18N
        jButton3.setText("View Counselor Notes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(641, 321, -1, -1));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/calendar.png"))); // NOI18N
        jButton1.setText("Book Appointment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 321, -1, -1));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/back.png"))); // NOI18N
        jButton4.setContentAreaFilled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 38, -1, -1));

        UpcomingDieticianAppointments.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        UpcomingDieticianAppointments.setForeground(new java.awt.Color(204, 255, 255));
        UpcomingDieticianAppointments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Counselor Name", "Upcoming Appointment Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UpcomingDieticianAppointments.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UpcomingDieticianAppointments.setEnabled(false);
        UpcomingDieticianAppointments.setGridColor(new java.awt.Color(255, 153, 0));
        UpcomingDieticianAppointments.setSelectionBackground(new java.awt.Color(255, 153, 0));
        jScrollPane1.setViewportView(UpcomingDieticianAppointments);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 98, 651, 194));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Mental Health Counselor Dashboard");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 38, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icons/polygonal-bg1100X850.jpg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, -4, 1100, 850));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        PatientBookAnAppointment ls= new PatientBookAnAppointment(WorkArea,system,p,3);
        WorkArea.add("PatientDieticianBookAppointment",ls);
        CardLayout layout= (CardLayout)WorkArea.getLayout();
        layout.next(WorkArea);         
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ViewPastAppointmentCounselor ls= new ViewPastAppointmentCounselor(WorkArea,system,p.getCounselorAppointments(),1);
        WorkArea.add("ViewPastAppointmentCounselor",ls);
        CardLayout layout= (CardLayout)WorkArea.getLayout();
        layout.next(WorkArea); 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        AllCounsellingNotes ls= new AllCounsellingNotes(WorkArea,system,p);
        WorkArea.add("AllCounsellingNotes",ls);
        CardLayout layout= (CardLayout)WorkArea.getLayout();
        layout.next(WorkArea); 
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UpcomingDieticianAppointments;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void populateUpcomingCounselorAppointments() {
      DefaultTableModel model = (DefaultTableModel) UpcomingDieticianAppointments.getModel();
      ArrayList<CounselorAppointment> temp=new ArrayList();
        try {
            temp=p.getCounselorAppointments();
        } catch (Exception e) {
            return;
        }
        model.setRowCount(0);
        
        for(int i=0;i<temp.size();i++)
    {
        if(temp.get(i).getDate().isAfter(LocalDate.now())&& temp.get(i).getDone()==false){
                Object row[] = new Object[2];
                row[0] = temp.get(i).getCounselor().getPersonDetails().getFullName();
                row[1] = temp.get(i).getDate();
                model.addRow(row);
    }
    }   
    }
}
