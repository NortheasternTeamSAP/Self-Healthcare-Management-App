/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Counselor.Counselor;
import Dietitian.Dietitian;
import EcoSystem.EcoSystem;
import FitnessTrainer.FitnessTrainer;
import Patient.Patient;
import com.toedter.calendar.JDateChooser;
import java.awt.CardLayout;
import java.awt.Component;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author preet
 */
public class PatientBookAnAppointment extends javax.swing.JPanel {
   JPanel WorkArea;
   EcoSystem system;
   Patient p ;
   int flag=0;
    /**
    /**
     * Creates new form PatientDieticianBookAppointment
     */
    public PatientBookAnAppointment(JPanel WorkArea,EcoSystem system,Patient p,int flag) {
        initComponents();        
        this.WorkArea=WorkArea;
        this.system=system;
        this.p=p;
        this.flag=flag;
        
        if(flag==1){
            jLabel1.setText("Book an Appointment With your Dietitian");
            jLabel2.setText("Select a Dietician");
            populatedietiticancombo();
        }
        else if (flag==2)
        {
        jLabel1.setText("Book an Appointment With your Fitness Trainer");
        jLabel2.setText("Select a FitnessTrainer");
        populatefitnesscombo();
        }
       if(flag==3)
        {
        jLabel1.setText("Book an Appointment With your Counselor");
        jLabel2.setText("Select a Counselor");
        populatecounselorcombo();
        
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboapp = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chooser = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        backf = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N

        comboapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboappActionPerformed(evt);
            }
        });

        jLabel2.setText("Select the Dietitian :");

        jLabel3.setText("Select a date :");

        jButton1.setText("Schedule Your Appointment ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        backf.setText("Back");
        backf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboapp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backf)))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(backf)
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboapp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboappActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboappActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if (flag==1){
        //Date date =chooser.getDate();
        Dietitian selectedDietitian=(Dietitian) comboapp.getSelectedItem();
        LocalDate date =(LocalDate) chooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        p.scheduleDietitianAppointment(selectedDietitian, date);
        JOptionPane.showMessageDialog(chooser, "Appointment Booked Successfully with Dietician   :"+ selectedDietitian.getDietitianDetails().getFullName()+" on  : "+date);
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientDieticianDashboard d=(PatientDieticianDashboard)component;
        d.populateUpcomingDieticianAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);   
    }
    
    else if (flag==2){
     FitnessTrainer selectedFitnessTrainer=(FitnessTrainer) comboapp.getSelectedItem();
     LocalDate date =(LocalDate) chooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
     p.scheduleFitnessAppointment(selectedFitnessTrainer, date);
     JOptionPane.showMessageDialog(chooser, "Appointment Booked Successfully with FitnessTrainer   :"+ selectedFitnessTrainer.getFitnessTrainerDetails().getFullName()+" on  : "+date);
     WorkArea.remove(this);
     Component[] componentArray = WorkArea.getComponents();
     Component component = componentArray[componentArray.length - 1];
     PatientFitnessDashboard d=(PatientFitnessDashboard)component;
     d.populateUpcomingFitnessTrainerAppointments();
     CardLayout layout = (CardLayout)WorkArea.getLayout();
     layout.previous(WorkArea);
    }
    else 
    {
     Counselor selectedCounselor=(Counselor) comboapp.getSelectedItem();
     LocalDate date =(LocalDate) chooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
     p.scheduleCounselorAppointment(selectedCounselor, date);
     JOptionPane.showMessageDialog(chooser, "Appointment Booked Successfully with selectedCounselor   :"+ selectedCounselor.getPersonDetails().getFullName()+" on  : "+date);
     WorkArea.remove(this);
     Component[] componentArray = WorkArea.getComponents();
     Component component = componentArray[componentArray.length - 1];
     PatientCounselorDashboard d=(PatientCounselorDashboard)component;
     d.populateUpcomingCounselorAppointments();
     CardLayout layout = (CardLayout)WorkArea.getLayout();
     layout.previous(WorkArea);
    }    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backfActionPerformed
        if(flag==1){
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientDieticianDashboard d=(PatientDieticianDashboard)component;
        d.populateUpcomingDieticianAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);     
        }
        else if (flag==2){
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientFitnessDashboard d=(PatientFitnessDashboard)component;
        d.populateUpcomingFitnessTrainerAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);
        }
        
        else {
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientCounselorDashboard d=(PatientCounselorDashboard)component;
        d.populateUpcomingCounselorAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);}
  
    }//GEN-LAST:event_backfActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backf;
    private com.toedter.calendar.JDateChooser chooser;
    private javax.swing.JComboBox<Object> comboapp;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

private void populatedietiticancombo() {
comboapp.removeAllItems();
System.out.println(""+system.getDietitianDirectory());
    
for(Dietitian d: system.getDietitianDirectory().getDietitians()){
    comboapp.addItem(d);
    
    }
}
    
 private void populatefitnesscombo() {
 comboapp.removeAllItems();
 for(FitnessTrainer f: system.getFitnessTrainerDirectory().getFitnessTrainers()){
 comboapp.addItem(f);   
    }
}

 private void populatecounselorcombo() {
 comboapp.removeAllItems();
 for(Counselor c: system.getCounselorDirectory().getCounselors()){
 comboapp.addItem(c);  
    }
}
}