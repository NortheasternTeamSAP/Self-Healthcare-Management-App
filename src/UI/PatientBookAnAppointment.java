/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Counselor.Counselor;
import Dietitian.Dietitian;
import EcoSystem.EcoSystem;
import FitnessTrainer.FitnessTrainer;
import Patient.Patient;
import Personnel.Person;
import com.toedter.calendar.JDateChooser;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.Locale;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author preet
 */
public class PatientBookAnAppointment extends javax.swing.JPanel {
   JPanel WorkArea;
   EcoSystem system;
   Patient p ;
   int flag=0;
   int selectedAppointmentTime = -1;
   String restrictions;
   String cheifcomplaint;
   String medication;
    /**
    /**
     * Creates new form PatientDieticianBookAppointment
     */
    public PatientBookAnAppointment(JPanel WorkArea,EcoSystem system,Patient p,int flag) {
        initComponents();        
        this.WorkArea=WorkArea;
        this.system=system;
        this.p=p;
        this.flag=flag;
        
        if(flag==1){
            jLabel1.setText("Book an Appointment With your Dietitian");
            jLabel2.setText("Select a Dietician");
            populatedietiticancombo();
        }
        else if (flag==2)
        {
        jLabel1.setText("Book an Appointment With your Fitness Trainer");
        jLabel2.setText("Select a FitnessTrainer");
        jLabel4.setText("Please indiacte any Body Ailments or Injuries ");
        populatefitnesscombo();
        }
       if(flag==3)
        {
        jLabel1.setText("Book an Appointment With your Counselor");
        jLabel2.setText("Select a Counselor");
        jLabel4.setText("Please Indicate of any previous Diagnosis \n or Mental health Conditions");
              populatecounselorcombo();
        
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboapp = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chooser = new com.toedter.calendar.JDateChooser();
        confirmapp = new javax.swing.JButton();
        backf = new javax.swing.JButton();
        timepanel = new javax.swing.JPanel();
        btn9 = new javax.swing.JButton();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtmedication = new javax.swing.JTextField();
        txtallergies = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        txtDietrestrict1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N

        comboapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboappActionPerformed(evt);
            }
        });

        jLabel2.setText("Select the Dietitian :");

        jLabel3.setText("Select a date :");

        confirmapp.setText("Schedule Your Appointment ");
        confirmapp.setEnabled(false);
        confirmapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmappActionPerformed(evt);
            }
        });

        backf.setText("Back");
        backf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backfActionPerformed(evt);
            }
        });

        timepanel.setBackground(new java.awt.Color(255, 204, 204));
        timepanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select A Time Slot "));

        btn9.setBackground(new java.awt.Color(204, 255, 255));
        btn9.setText("9AM");
        btn9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn10.setBackground(new java.awt.Color(204, 255, 255));
        btn10.setText("10AM");
        btn10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });

        btn11.setBackground(new java.awt.Color(204, 255, 255));
        btn11.setText("11AM");
        btn11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn11ActionPerformed(evt);
            }
        });

        btn1.setBackground(new java.awt.Color(204, 255, 255));
        btn1.setText("1PM");
        btn1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(204, 255, 255));
        btn2.setText("2PM");
        btn2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setBackground(new java.awt.Color(204, 255, 255));
        btn3.setText("3PM");
        btn3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout timepanelLayout = new javax.swing.GroupLayout(timepanel);
        timepanel.setLayout(timepanelLayout);
        timepanelLayout.setHorizontalGroup(
            timepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timepanelLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(btn11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        timepanelLayout.setVerticalGroup(
            timepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timepanelLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(timepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn9)
                    .addComponent(btn10)
                    .addComponent(btn11)
                    .addComponent(btn1)
                    .addComponent(btn2)
                    .addComponent(btn3))
                .addGap(17, 17, 17))
        );

        jLabel4.setBackground(new java.awt.Color(204, 255, 255));
        jLabel4.setText("Specify any food allergies or Diet Restrictions");
        jLabel4.setOpaque(true);

        jLabel5.setBackground(new java.awt.Color(204, 255, 255));
        jLabel5.setText("Please add Any Medications you are currently on :");
        jLabel5.setOpaque(true);

        txtmedication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmedicationActionPerformed(evt);
            }
        });

        jCheckBox1.setText("I Agree to Recieve Marketing Email ");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox4.setText(" I Agree To Terms and Conditions ");

        jCheckBox3.setText("I Agree to the Privacy Policy ");

        txtDietrestrict1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDietrestrict1ActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(204, 255, 255));
        jLabel6.setText("Chief Complaints");
        jLabel6.setOpaque(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backf))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboapp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chooser, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timepanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(confirmapp, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox4)
                                        .addComponent(jCheckBox3)
                                        .addComponent(jCheckBox1))
                                    .addGap(39, 39, 39)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtmedication, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtallergies, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDietrestrict1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(701, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(backf)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboapp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chooser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(timepanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtallergies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmedication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDietrestrict1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(jCheckBox1)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox3)
                .addGap(18, 18, 18)
                .addComponent(jCheckBox4)
                .addGap(28, 28, 28)
                .addComponent(confirmapp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboappActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboappActionPerformed

    private void confirmappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmappActionPerformed
       
            String restrictions=txtallergies.getText();
            String cheifcomplaint=txtDietrestrict1.getText();
            String medication=txtmedication.getText();
        
  if(Checkconstraint()==true){      
        if (flag == 1) {

            Dietitian selectedDietitian = (Dietitian) comboapp.getSelectedItem();
            LocalDate date = (LocalDate) chooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            
            if (p.scheduleDietitianAppointment(selectedDietitian, date, selectedAppointmentTime,restrictions,cheifcomplaint,medication) == true) {
             
           JOptionPane.showMessageDialog(chooser, "Appointment Booked Successfully with Dietician   :" + selectedDietitian.getDietitianDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            } else {
                JOptionPane.showMessageDialog(chooser, "The appointment is Not available with dietitian  :" + selectedDietitian.getDietitianDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            }

            WorkArea.remove(this);
            Component[] componentArray = WorkArea.getComponents();
            Component component = componentArray[componentArray.length - 1];
            PatientDieticianDashboard d = (PatientDieticianDashboard) component;
            d.populateUpcomingDieticianAppointments();
            CardLayout layout = (CardLayout) WorkArea.getLayout();
            layout.previous(WorkArea);
        } else if (flag == 2) {
            FitnessTrainer selectedFitnessTrainer = (FitnessTrainer) comboapp.getSelectedItem();
            LocalDate date = (LocalDate) chooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            if (p.scheduleFitnessAppointment(selectedFitnessTrainer, date, selectedAppointmentTime,restrictions,cheifcomplaint,medication) == true) {
                
                JOptionPane.showMessageDialog(chooser, "Appointment Booked Successfully with FitnessTrainer   :" + selectedFitnessTrainer.getFitnessTrainerDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            } else {
                JOptionPane.showMessageDialog(chooser, "The appointment is Not available with FitnessTrainer   :" + selectedFitnessTrainer.getFitnessTrainerDetails().getFullName() + " on  : " + date + " and Time : "+selectedAppointmentTime+":00 hrs");
            }
            WorkArea.remove(this);
            Component[] componentArray = WorkArea.getComponents();
            Component component = componentArray[componentArray.length - 1];
            PatientFitnessDashboard d = (PatientFitnessDashboard) component;
            d.populateUpcomingFitnessTrainerAppointments();
            CardLayout layout = (CardLayout) WorkArea.getLayout();
            layout.previous(WorkArea);
        } else {
            Counselor selectedCounselor = (Counselor) comboapp.getSelectedItem();
            LocalDate date = (LocalDate) chooser.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            if (p.scheduleCounselorAppointment(selectedCounselor, date, selectedAppointmentTime,restrictions,cheifcomplaint,medication) == true) {
                JOptionPane.showMessageDialog(chooser, "Appointment Booked Successfully with selectedCounselor   :" + selectedCounselor.getPersonDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            } else {
                JOptionPane.showConfirmDialog(chooser, "The appointment is Not available with Counselor   :" + selectedCounselor.getPersonDetails().getFullName() + " on  : " + date+ " and Time : "+selectedAppointmentTime+":00 hrs");
            }
            WorkArea.remove(this);
            Component[] componentArray = WorkArea.getComponents();
            Component component = componentArray[componentArray.length-1];       
            PatientCounselorDashboard d = (PatientCounselorDashboard) component;
            d.populateUpcomingCounselorAppointments();
            CardLayout layout = (CardLayout) WorkArea.getLayout();
            layout.previous(WorkArea);
        }
  }
 
    }//GEN-LAST:event_confirmappActionPerformed

    private void backfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backfActionPerformed
        if(flag==1){
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientDieticianDashboard d=(PatientDieticianDashboard)component;
        d.populateUpcomingDieticianAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);     
        }
        else if (flag==2){
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientFitnessDashboard d=(PatientFitnessDashboard)component;
        d.populateUpcomingFitnessTrainerAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);
        }
        
        else {
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientCounselorDashboard d=(PatientCounselorDashboard)component;
        d.populateUpcomingCounselorAppointments();
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);}
  
    }//GEN-LAST:event_backfActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        selectedAppointmentTime = 9;
        btn9.setBackground(Color.YELLOW);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.GRAY);
        confirmapp.setEnabled(true);
        

        
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
         selectedAppointmentTime = 10;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.YELLOW);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.GRAY);
       confirmapp.setEnabled(true);
    
    }//GEN-LAST:event_btn10ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        selectedAppointmentTime = 14;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.YELLOW);
        btn3.setBackground(Color.GRAY);
        confirmapp.setEnabled(true);
        

    }//GEN-LAST:event_btn2ActionPerformed

    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
      selectedAppointmentTime = 11;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.YELLOW);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.GRAY);
        confirmapp.setEnabled(true);
        
       
    }//GEN-LAST:event_btn11ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
       selectedAppointmentTime = 13;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.YELLOW);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.GRAY);
        confirmapp.setEnabled(true);
        
        
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        selectedAppointmentTime = 15;
        btn9.setBackground(Color.GRAY);
        btn10.setBackground(Color.GRAY);      
        btn11.setBackground(Color.GRAY);
        btn1.setBackground(Color.GRAY);
        btn2.setBackground(Color.GRAY);
        btn3.setBackground(Color.YELLOW);
       confirmapp.setEnabled(true);
    }//GEN-LAST:event_btn3ActionPerformed

    private void txtmedicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmedicationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmedicationActionPerformed

    private void txtDietrestrict1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDietrestrict1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDietrestrict1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backf;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn9;
    private com.toedter.calendar.JDateChooser chooser;
    private javax.swing.JComboBox<Object> comboapp;
    private javax.swing.JButton confirmapp;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel timepanel;
    private javax.swing.JTextField txtDietrestrict1;
    private javax.swing.JTextField txtallergies;
    private javax.swing.JTextField txtmedication;
    // End of variables declaration//GEN-END:variables

    private void populatedietiticancombo() {
        comboapp.removeAllItems();

        for (Person p : system.globalUserDirectory.getAllDietitians()) {
            comboapp.addItem(p);
        }
    }

    private void populatefitnesscombo() {
        comboapp.removeAllItems();
        for (Person f : system.globalUserDirectory.getAllFitnessTrainers()) {
            comboapp.addItem(f);
        }
    }

    private void populatecounselorcombo() {
        comboapp.removeAllItems();
        for (Person c : system.globalUserDirectory.getAllCounselors()) {
            comboapp.addItem(c);
        }
    }
       
    private boolean Checkconstraint() {
        if (txtmedication.getText().isEmpty()|| txtallergies.getText().isEmpty()||txtDietrestrict1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please provide all the details ");
            return false;
        } else {

            if ( jCheckBox3.isSelected() && jCheckBox4.isSelected()) {

                return true;
            } else {
                JOptionPane.showMessageDialog(this, "Please Agree to our privacy policy and Terms & Conditions");
                return false;

            }

        }
    }

}
