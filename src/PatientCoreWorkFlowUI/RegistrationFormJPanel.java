/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PatientCoreWorkFlowUI;

import DataStore.GlobalUserDirectory;
import EcoSystem.EcoSystem;
import Patient.Patient;
import Personnel.Person;
import Personnel.PersonDetails;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.Instant;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Ankur Bywar
 */
public class RegistrationFormJPanel extends javax.swing.JPanel {
    EcoSystem ecoSystem;
    private final JFileChooser fileChooser = new JFileChooser();
    ImageIcon logoImage;
    /**
     * Creates new form RegistrationFormJPanel
     */
    public RegistrationFormJPanel(EcoSystem ecoSystem) {
        initComponents();
        this.ecoSystem = ecoSystem;
      
        FileFilter jpegFilter = new FileNameExtensionFilter("JPEG file" , "jpg" , "jpeg");
        FileFilter pngFilter = new FileNameExtensionFilter("PNG file" , "png" , "png");
        
       
        fileChooser.addChoosableFileFilter(jpegFilter);
        fileChooser.addChoosableFileFilter(pngFilter);
        fileChooser.setFileFilter(pngFilter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRegisterPanel = new javax.swing.JPanel();
        lblTitleRegister = new javax.swing.JLabel();
        jSelectRoleLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        txtDobDateChooser = new com.toedter.calendar.JDateChooser();
        txtPhoneNumber = new javax.swing.JTextField();
        txtAddressStreet = new javax.swing.JTextField();
        txtAddressCity = new javax.swing.JTextField();
        txtAddressZip = new javax.swing.JTextField();
        jComboBoxAddrState = new javax.swing.JComboBox<>();
        txtAddressCountry = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        jUsernameLabel = new javax.swing.JLabel();
        jPasswordLabel = new javax.swing.JLabel();
        jPasswordTextField = new javax.swing.JPasswordField();
        btnRegister = new javax.swing.JButton();
        btnLoginRedirect = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnTakeShot = new javax.swing.JButton();
        imgLogo = new javax.swing.JLabel();
        btnAttach1 = new javax.swing.JButton();
        lblAddrStreet = new javax.swing.JLabel();
        lblAddrCity = new javax.swing.JLabel();
        lblAddrZip = new javax.swing.JLabel();
        lblAddrCountry = new javax.swing.JLabel();
        lblAddrState = new javax.swing.JLabel();

        lblTitleRegister.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitleRegister.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitleRegister.setText("New User Registeration");

        jSelectRoleLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jSelectRoleLabel.setText("Profile Picture");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Name:");

        lblDob.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblDob.setText("Dob:");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Phone Number:");

        lblAddress.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lblAddress.setText("Address:");

        jComboBoxAddrState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "MA", "WA", "TX", "CA", " " }));
        jComboBoxAddrState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAddrStateActionPerformed(evt);
            }
        });

        txtAddressCountry.setText("USA");

        txtUsername.setToolTipText("Enter Username");
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        jUsernameLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jUsernameLabel.setText("Username");

        jPasswordLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jPasswordLabel.setText("Password");

        jPasswordTextField.setToolTipText("");
        jPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordTextFieldActionPerformed(evt);
            }
        });

        btnRegister.setBackground(new java.awt.Color(0, 153, 153));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnLoginRedirect.setText("Login");
        btnLoginRedirect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginRedirectActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(204, 204, 255));
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnTakeShot.setBackground(new java.awt.Color(255, 255, 102));
        btnTakeShot.setText("Take Shot");
        btnTakeShot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTakeShotActionPerformed(evt);
            }
        });

        imgLogo.setBackground(new java.awt.Color(255, 255, 204));
        imgLogo.setText("Upload your photo here");

        btnAttach1.setBackground(new java.awt.Color(255, 255, 102));
        btnAttach1.setText("Attach");
        btnAttach1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttach1ActionPerformed(evt);
            }
        });

        lblAddrStreet.setText("Community/Street");

        lblAddrCity.setText("City");

        lblAddrZip.setText("Zip");

        lblAddrCountry.setText("Country");

        lblAddrState.setText("State");

        javax.swing.GroupLayout jRegisterPanelLayout = new javax.swing.GroupLayout(jRegisterPanel);
        jRegisterPanel.setLayout(jRegisterPanelLayout);
        jRegisterPanelLayout.setHorizontalGroup(
            jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jRegisterPanelLayout.createSequentialGroup()
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jRegisterPanelLayout.createSequentialGroup()
                        .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jRegisterPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jRegisterPanelLayout.createSequentialGroup()
                                        .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblAddrCity)
                                            .addComponent(lblAddrStreet)
                                            .addComponent(lblAddrZip))
                                        .addGap(45, 45, 45))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jRegisterPanelLayout.createSequentialGroup()
                                        .addComponent(lblAddrCountry)
                                        .addGap(18, 18, 18))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jRegisterPanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSelectRoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(132, 132, 132)))
                        .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPhoneNumber)
                            .addComponent(txtAddressStreet)
                            .addComponent(txtAddressCity, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jRegisterPanelLayout.createSequentialGroup()
                                .addComponent(txtAddressZip, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAddrState)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxAddrState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtAddressCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDobDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jRegisterPanelLayout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jRegisterPanelLayout.createSequentialGroup()
                                    .addComponent(jPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jRegisterPanelLayout.createSequentialGroup()
                                    .addComponent(jUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblDob)
                                        .addComponent(jLabel3))))
                            .addGroup(jRegisterPanelLayout.createSequentialGroup()
                                .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(241, 241, 241)))
                        .addGap(236, 236, 236))
                    .addGroup(jRegisterPanelLayout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLoginRedirect, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jRegisterPanelLayout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(lblTitleRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAttach1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTakeShot, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(118, 118, 118))
        );
        jRegisterPanelLayout.setVerticalGroup(
            jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jRegisterPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jRegisterPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnAttach1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTakeShot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jRegisterPanelLayout.createSequentialGroup()
                        .addComponent(lblTitleRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(imgLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSelectRoleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jRegisterPanelLayout.createSequentialGroup()
                        .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jRegisterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(22, 22, 22)))
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jRegisterPanelLayout.createSequentialGroup()
                        .addComponent(txtDobDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddressStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddrStreet)))
                    .addGroup(jRegisterPanelLayout.createSequentialGroup()
                        .addComponent(lblDob)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(7, 7, 7)
                        .addComponent(lblAddress)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddressCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddrCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddressZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAddrState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddrZip)
                    .addComponent(lblAddrState))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddressCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddrCountry))
                .addGap(26, 26, 26)
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(btnRegister)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLoginRedirect, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(181, 181, 181))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 893, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jRegisterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 840, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jRegisterPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxAddrStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAddrStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxAddrStateActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void jPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordTextFieldActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:

      
        GlobalUserDirectory gd = ecoSystem.getGlobalUserDirectory();
       
        String name = txtFullName.getText();
        if (name == null || name.isEmpty()) {
            JOptionPane.showMessageDialog(jRegisterPanel, "name cannot be empty");
            return;
        }

        String userName = txtUsername.getText();
        if (userName == null || userName.isEmpty()) {
            JOptionPane.showMessageDialog(jRegisterPanel, "username cannot be empty");
            return;
        }

        String password = new String(jPasswordTextField.getPassword());
        if (password == null || password.isEmpty()) {
            JOptionPane.showMessageDialog(jRegisterPanel, "password cannot be empty");
            return;
        }

        String phoneNumber = txtPhoneNumber.getText();
        if (phoneNumber == null || phoneNumber.isEmpty()) {
            JOptionPane.showMessageDialog(jRegisterPanel, "phone number cannot be empty");
            return;
        }
        Date dob = txtDobDateChooser.getDate();
        Date currentDate = Date.from(Instant.now());
        if (dob.after(currentDate)) {
            JOptionPane.showMessageDialog(jRegisterPanel, "Date of Birth must be older than current date");
            return;
        }

        try {
            Long.parseLong(phoneNumber);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(jRegisterPanel, "Invalid phone number. Expected numbers only.");
            return;
        }

        if (phoneNumber.length() != 10) {
            JOptionPane.showMessageDialog(jRegisterPanel, "Invalid phone number. Expected 10 digit number.");
            return;
        }

//         String addrCity = txtAddressCity.getText();
//        String addrZip = txtAddressZip.getText();
//        String addrState = String.valueOf(jComboBoxAddrState.getSelectedItem());
//        if (addrState.equals("Select")) {
//            JOptionPane.showMessageDialog(jRegisterPanel, "Select a valid state.");
//            return;
//        }
//        String addrCountry = txtAddressCountry.getText(); String addrCommunity = txtAddressStreet.getText();
      

        if (gd.getPerson(userName) != null) {
            JOptionPane.showMessageDialog(jRegisterPanel, "Username already exists. Pick a different username.");
            return;
        }

        System.out.println("Date: " + dob.toString());
        //House house = new House(addrCommunity, addrZip,  addrCity,  addrState,  addrCountry);

       

        Icon logo = imgLogo.getIcon();

        Person p = null;

//        switch (role) {
//            case "Patient":
//            {
//                p = new Patient(userName, password, name, phoneNumber, dob, house, logo);
//            }
//            break;
//            case "Doctor":
//            p = new Doctor(userName, password, name, phoneNumber, dob, house, logo);
//            break;
//            default:
//            throw new RuntimeException("Invalid option selected from drop down");
//        }

        pd.addPerson(p);
        JOptionPane.showMessageDialog(this,"registered info saved");
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnLoginRedirectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginRedirectActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_btnLoginRedirectActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        logoImage = null;
        imgLogo.setIcon(logoImage);
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnTakeShotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTakeShotActionPerformed
        // TODO add your handling code here:
//        import org.bytedeco.javacv.*;
//import org.bytedeco.opencv.opencv_core.IplImage;
//import java.io.File;
//import static org.bytedeco.opencv.global.opencv_core.cvFlip;
//import static org.bytedeco.opencv.helper.opencv_imgcodecs.cvSaveImage;
//public class Test implements Runnable {
//    final int INTERVAL = 100;///you may use interval
//    CanvasFrame canvas = new CanvasFrame("Web Cam");
//    public Test() {
//        canvas.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
//    }
//    public void run() {
//        new File("images").mkdir();
//        FrameGrabber grabber = new OpenCVFrameGrabber(0); // 1 for next camera
//        OpenCVFrameConverter.ToIplImage converter = new OpenCVFrameConverter.ToIplImage();
//        IplImage img;
//        int i = 0;
//        try {
//            grabber.start();
//            while (true) {
//                Frame frame = grabber.grab();
//                img = converter.convert(frame);
//                //the grabbed frame will be flipped, re-flip to make it right
//                cvFlip(img, img, 1);// l-r = 90_degrees_steps_anti_clockwise
//                //save
//                cvSaveImage("images" + File.separator + (i++) + "-aa.jpg", img);
//                canvas.showImage(converter.convert(img));
//                Thread.sleep(INTERVAL);
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
//    public static void main(String[] args) {
//        Test gs = new Test();
//        Thread th = new Thread(gs);
//        th.start();
//    }
}
       
    }//GEN-LAST:event_btnTakeShotActionPerformed

    private void btnAttach1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttach1ActionPerformed
        // TODO add your handling code here:
         int returnVal = fileChooser.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            BufferedImage img = null;
            try {
                img = ImageIO.read(file);
            } catch (IOException ex) {
                Logger.getLogger(RegistrationFormJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            Image scaled = img.getScaledInstance(120, 120, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(scaled);
            imgLogo.setIcon(icon);
        
    }//GEN-LAST:event_btnAttach1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAttach1;
    private javax.swing.JButton btnLoginRedirect;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnTakeShot;
    private javax.swing.JLabel imgLogo;
    private javax.swing.JComboBox<String> jComboBoxAddrState;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jPasswordLabel;
    private javax.swing.JPasswordField jPasswordTextField;
    private javax.swing.JPanel jRegisterPanel;
    private javax.swing.JLabel jSelectRoleLabel;
    private javax.swing.JLabel jUsernameLabel;
    private javax.swing.JLabel lblAddrCity;
    private javax.swing.JLabel lblAddrCountry;
    private javax.swing.JLabel lblAddrState;
    private javax.swing.JLabel lblAddrStreet;
    private javax.swing.JLabel lblAddrZip;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblTitleRegister;
    private javax.swing.JTextField txtAddressCity;
    private javax.swing.JTextField txtAddressCountry;
    private javax.swing.JTextField txtAddressStreet;
    private javax.swing.JTextField txtAddressZip;
    private com.toedter.calendar.JDateChooser txtDobDateChooser;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
