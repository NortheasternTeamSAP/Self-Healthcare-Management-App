/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PatientCoreWorkFlowUI;

import DataStore.GlobalUserDirectory;
import Dietitian.Dietitian;
import Doctor.Doctor;
import EcoSystem.EcoSystem;
import Personnel.Person;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mrs.katey
 */
public class ManageDoctorJPanel extends javax.swing.JPanel {
   JPanel WorkArea;
   EcoSystem system;
   Doctor doctor;
   GlobalUserDirectory gud;
   
    /**
     * Creates new form ManageDoctorJPanel
     */
    public ManageDoctorJPanel(JPanel WorkArea, EcoSystem system, GlobalUserDirectory gud) {
        initComponents();
        this.WorkArea=WorkArea;
        this.system=system;
        this.gud = gud;
        this.doctor = doctor;
        ShowDoctors();
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();
        btnAddDoctor = new javax.swing.JButton();
        btnEditDoctor = new javax.swing.JButton();
        btnDeleteDoctor = new javax.swing.JButton();

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Doctor"
            }
        ));
        jScrollPane1.setViewportView(tblDoctor);

        btnAddDoctor.setText("Add Doctor");
        btnAddDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDoctorActionPerformed(evt);
            }
        });

        btnEditDoctor.setText("Edit Doctor");
        btnEditDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditDoctorActionPerformed(evt);
            }
        });

        btnDeleteDoctor.setText("Delete Doctor");
        btnDeleteDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDoctorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddDoctor)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditDoctor)
                        .addGap(31, 31, 31)
                        .addComponent(btnDeleteDoctor))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(57, 57, 57)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnBack))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditDoctor)
                    .addComponent(btnAddDoctor)
                    .addComponent(btnDeleteDoctor))
                .addContainerGap(179, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        WorkArea.remove(this);
        Component[] componentArray = WorkArea.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CardLayout layout = (CardLayout)WorkArea.getLayout();
        layout.previous(WorkArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDoctorActionPerformed
        CreateDoctorJPanel cdjp= new CreateDoctorJPanel(WorkArea,system, gud);
        WorkArea.add("CreateDoctorJPanel",cdjp);
        CardLayout layout= (CardLayout)WorkArea.getLayout();
        layout.next(WorkArea);
    }//GEN-LAST:event_btnAddDoctorActionPerformed

    private void btnEditDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditDoctorActionPerformed
        int row = tblDoctor.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a Doctor from the Table", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Doctor d = (Doctor)tblDoctor.getValueAt(row, 0);
        CreateDoctorJPanel cdjp= new CreateDoctorJPanel(WorkArea,system,gud);
        WorkArea.add("CreateDoctorJPanel",cdjp);
        CardLayout layout= (CardLayout)WorkArea.getLayout();
        layout.next(WorkArea);
        

       
    }//GEN-LAST:event_btnEditDoctorActionPerformed

    private void btnDeleteDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDoctorActionPerformed
        int row = tblDoctor.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a doctor from the Table", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

          Doctor d = (Doctor)tblDoctor.getValueAt(row, 0);
          system.globalUserDirectory.deletePerson(d);
          //system.getGlobalUserDirectory().deletePerson(d);
          JOptionPane.showMessageDialog(this, "This doctor  has been deleted ");
          ShowDoctors();
          
          
          
        
    }//GEN-LAST:event_btnDeleteDoctorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDoctor;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteDoctor;
    private javax.swing.JButton btnEditDoctor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDoctor;
    // End of variables declaration//GEN-END:variables

    private void ShowDoctors() {
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        model.setRowCount(0);
        System.out.println("** Size: " + system.getGlobalUserDirectory().getAllDoctors().size());
        
        ArrayList<Person> temp=new ArrayList();
       try {
        temp=(ArrayList<Person>) system.getGlobalUserDirectory().getAllDoctors();
        } catch (Exception e) {
            return;
        }
 
       // model.setRowCount(0);
        for(Person doctor : system.getGlobalUserDirectory().getAllDoctors()) {
        
        //for(int i=0;i<temp.size();i++)
    
       Object row[] = new Object[1];
            int i = 0;
       row[0] = temp.get(i);
       model.addRow(row);
     
    }       
   }
        
    
}
